@font-face{font-family:"Rubik";src:local("Rubik-Light"),url(../fonts/Rubik-Light.woff) format("woff"),url(../fonts/Rubik-Light.woff2) format("woff2"),url(../fonts/Rubik-Light.ttf) format("ttf"),url(../fonts/Rubik-Light.eot) format("eot");font-weight:300;font-style:normal}@font-face{font-family:"Rubik";src:local("Rubik-Medium"),url(../fonts/Rubik-Medium.woff) format("woff"),url(../fonts/Rubik-Medium.woff2) format("woff2"),url(../fonts/Rubik-Medium.ttf) format("ttf"),url(../fonts/Rubik-Medium.eot) format("eot");font-weight:500;font-style:normal}@font-face{font-family:"Rubik";src:local("Rubik-Light"),url(../fonts/Rubik-Light.woff) format("woff"),url(../fonts/Rubik-Light.woff2) format("woff2"),url(../fonts/Rubik-Light.ttf) format("ttf"),url(../fonts/Rubik-Light.eot) format("eot");font-weight:300;font-style:normal}@font-face{font-family:"Rubik";src:local("Rubik-Medium"),url(../fonts/Rubik-Medium.woff) format("woff"),url(../fonts/Rubik-Medium.woff2) format("woff2"),url(../fonts/Rubik-Medium.ttf) format("ttf"),url(../fonts/Rubik-Medium.eot) format("eot");font-weight:500;font-style:normal}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{height:100%}body{font:19px/1.2 Rubik,Arial,sans-serif;width:100%}body,h1,h2,h3,h4,h5,h6,li,p,ul{margin:0}li,ul{padding:0}li{list-style:none}a{text-decoration:none;color:#6ceec7}audio,canvas,iframe,img,svg,video{vertical-align:middle}textarea{resize:none}button,input,select{outline:0}button,input[type=button]{cursor:pointer;border:0}.container{width:100%;padding-right:var(--bs-gutter-x, 15px);padding-left:var(--bs-gutter-x, 15px);margin-right:auto;margin-left:auto}.clients,.footer,.header,.make-row,.pricing,.promo,.team{--bs-gutter-x:30px;--bs-gutter-y:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:calc(-1*var(--bs-gutter-y));margin-right:calc(-.5*var(--bs-gutter-x));margin-left:calc(-.5*var(--bs-gutter-x));--bs-gutter-y:1rem}.clients>*,.footer>*,.header>*,.make-row>*,.pricing>*,.promo>*,.team>*{-ms-flex-negative:0;flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x)*.5);padding-left:calc(var(--bs-gutter-x)*.5);margin-top:var(--bs-gutter-y)}.block{background:#ddd;padding:20px;height:100%;border:1px solid #aaa;text-align:center}.header{min-height:90px;margin-bottom:130px}.promo{min-height:460px;margin-bottom:110px}.clients{min-height:80px;margin-bottom:170px}.pricing{min-height:480px;margin-bottom:235px}.team{min-height:360px;margin-bottom:180px}.footer{min-height:380px}.slick-slider{min-width:0}.slick-list{overflow:hidden}.slick-track{display:-webkit-box;display:-ms-flexbox;display:flex}.s-main{min-height:100vh;position:relative;background-size:cover;background-repeat:no-repeat;background-position:center}.s-main::after{content:"";position:absolute;top:0;right:0;bottom:0;left:0;background:url(../img/section-main/section_1-svg_1.svg) 90% -10% no-repeat,url(../img/section-main/section_1-svg_2.svg) -5% 40% no-repeat,url(../img/section-main/section_1-svg_3.svg) 105% 90% no-repeat;background-size:5px 10px,30px,30px}@supports (-webkit-appearance:none){.s-main::after{background:url(../img/section-main/section_1-svg_1.svg) 90% -10% no-repeat,url(../img/section-main/section_1-svg_2.svg) -5% 40% no-repeat,url(../img/section-main/section_1-svg_3.svg) 105% 90% no-repeat}}@media (min-width:576px){.container{max-width:540px}.clients__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50%}}@media (min-width:768px){.container{max-width:720px}.header__logo{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:25%}.clients__item,.header__nav,.pricing__item,.promo__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:75%}.clients__item,.pricing__item,.promo__item{width:50%}.clients__item,.pricing__item{width:33.33333333%}.footer__contact,.footer__form,.footer__social,.team__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50%}.footer__form{width:100%}}@media (min-width:992px){.container{max-width:960px}.clients__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16.66666667%}.footer__contact,.footer__form,.footer__social,.team__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:25%}.footer__contact,.footer__form,.footer__social{width:33.33333333%}.footer__contact,.footer__form{width:25%}.footer__form{width:41.66666667%}}@media (min-width:1200px){.container{max-width:1140px}}@media (min-width:1400px){.container{max-width:1320px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */