@font-face{font-family:"Rubik";src:local("Rubik-Light"),url(../fonts/Rubik-Light.woff) format("woff"),url(../fonts/Rubik-Light.woff2) format("woff2"),url(../fonts/Rubik-Light.ttf) format("ttf"),url(../fonts/Rubik-Light.eot) format("eot");font-weight:300;font-style:normal}@font-face{font-family:"Rubik";src:local("Rubik-Medium"),url(../fonts/Rubik-Medium.woff) format("woff"),url(../fonts/Rubik-Medium.woff2) format("woff2"),url(../fonts/Rubik-Medium.ttf) format("ttf"),url(../fonts/Rubik-Medium.eot) format("eot");font-weight:500;font-style:normal}@font-face{font-family:"Rubik";src:local("Rubik-Light"),url(../fonts/Rubik-Light.woff) format("woff"),url(../fonts/Rubik-Light.woff2) format("woff2"),url(../fonts/Rubik-Light.ttf) format("ttf"),url(../fonts/Rubik-Light.eot) format("eot");font-weight:300;font-style:normal}@font-face{font-family:"Rubik";src:local("Rubik-Medium"),url(../fonts/Rubik-Medium.woff) format("woff"),url(../fonts/Rubik-Medium.woff2) format("woff2"),url(../fonts/Rubik-Medium.ttf) format("ttf"),url(../fonts/Rubik-Medium.eot) format("eot");font-weight:500;font-style:normal}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}body{font:19px/1.2 Rubik,Arial,sans-serif}body,h1,h2,h3,h4,h5,h6,li,p,ul{margin:0}li,ul{padding:0}li{list-style:none}a{text-decoration:none;color:#6ceec7}audio,canvas,iframe,img,svg,video{vertical-align:middle}textarea{resize:none}button,input,select{outline:0}button,input[type=button]{cursor:pointer;border:0}.container{width:100%;padding-right:var(--bs-gutter-x, 15px);padding-left:var(--bs-gutter-x, 15px);margin-right:auto;margin-left:auto}.clients,.footer,.header,.make-row,.pricing,.promo,.team{--bs-gutter-x:30px;--bs-gutter-y:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:calc(-1*var(--bs-gutter-y));margin-right:calc(-.5*var(--bs-gutter-x));margin-left:calc(-.5*var(--bs-gutter-x));--bs-gutter-y:1rem}.clients>*,.footer>*,.header>*,.make-row>*,.pricing>*,.promo>*,.team>*{-ms-flex-negative:0;flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x)*.5);padding-left:calc(var(--bs-gutter-x)*.5);margin-top:var(--bs-gutter-y)}.block{background:#ddd;padding:20px;height:100%;border:1px solid #aaa;text-align:center}.header{min-height:90px;margin-bottom:130px}.promo{min-height:460px;margin-bottom:110px}.clients{min-height:80px;margin-bottom:170px}.pricing{min-height:480px;margin-bottom:235px}.team{min-height:360px;margin-bottom:180px}.footer{min-height:380px}.slick-slider{min-width:0}.slick-list{overflow:hidden}.slick-track{display:-webkit-box;display:-ms-flexbox;display:flex}.s-main{min-height:100vh;position:relative;background-size:cover;background-repeat:no-repeat;background-position:center}.s-main::after{content:"";position:absolute;top:0;right:0;bottom:0;left:0;background:url(../img/section-main/section_1-svg_1.svg) 90% -10% no-repeat,url(../img/section-main/section_1-svg_2.svg) -5% 40% no-repeat,url(../img/section-main/section_1-svg_3.svg) 105% 90% no-repeat,rgba(0,0,0,.3);background-size:30px 40px,20%,30%}@supports (-webkit-appearance:none){.s-main::after{background:url(../img/section-main/section_1-svg_1.svg) 90% -10% no-repeat,url(../img/section-main/section_1-svg_2.svg) -5% 40% no-repeat,url(../img/section-main/section_1-svg_3.svg) 105% 90% no-repeat,rgba(0,0,0,.3)}}@media (min-width:576px){.container{max-width:540px}.clients__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50%}}@media (min-width:768px){.container{max-width:720px}.header__logo{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:25%}.clients__item,.header__nav,.pricing__item,.promo__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:75%}.clients__item,.pricing__item,.promo__item{width:50%}.clients__item,.pricing__item{width:33.33333333%}.footer__contact,.footer__form,.footer__social,.team__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:50%}.footer__form{width:100%}}@media (min-width:992px){.container{max-width:960px}.clients__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:16.66666667%}.footer__contact,.footer__form,.footer__social,.team__item{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:25%}.footer__contact,.footer__form,.footer__social{width:33.33333333%}.footer__contact,.footer__form{width:25%}.footer__form{width:41.66666667%}}@media (min-width:1200px){.container{max-width:1140px}}@media (min-width:1400px){.container{max-width:1320px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi9fZm9udHMuc2NzcyIsIm1haW4ubWluLmNzcyIsIm1haW4uY3NzIiwiY29tbW9uL19jb21tb24uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9taXhpbnMvX2NvbnRhaW5lci5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9zY3NzL21peGlucy9fYnJlYWtwb2ludHMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9taXhpbnMvX2dyaWQuc2NzcyIsImNvbXBvbmVudHMvX3NsaWNrY3VzdG9tLnNjc3MiLCJzZWN0aW9ucy9zLW1haW4uc2NzcyIsImhlbHBlcnMvX21peGlucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBLEFBQ0UsV0FDRSxtQixDQUNBLDhNLENBS0EsZSxDQUNBLGtCLEFDRkosV0RKSSxtQixDQUtBLG1OLENBQ0EsZSxDRUVKLGtCLEFER0EsV0ROSSxtQixDQUNBLDhNLENFUUosZSxDRmhCRSxrQixBQ29CRixXRFpJLG1CLENFY0osbU4sQ0NwQkEsZSxDQUNFLGtCRndCRixDLENBRUEsTyxDRXRCQSxRLENBRUUsNkIsQ0FDQSxxQixDRndCRixJLENFcEJBLG9DLENGb0JBLEksQ0VoQkEsRSxDRnNCQSxFLENBQ0EsRSxDQ0FBLEUsQ0RFQSxFLENFcEJBLEUsQ0YwQkEsRSxDQVNBLEMsQ0UvQkEsRSxDQUhFLFEsQ0Z5QkYsRSxDRXRCQSxFLENGd0JFLFMsQ0FHRixFLENDQUEsZSxDRFFBLEMsQ0VwQkUsb0IsQ0RxQkYsYSxDRElBLEssQ0NBQSxNLENERUEsTSxDRXBCQSxHLENGc0JBLEcsQ0FDQSxLLENFcEJFLHFCLENBR0YsUSxDQUNFLFcsQ0YwQkYsTSxDQUZBLEssQ0VwQkEsTSxDQ3pERSxTLENIbUZGLE0sQ0NBQSxrQixDR3hCSSxjLENGRkosUSxDRCtCQSxVLENHN0JJLFUsQ0ZGSixzQyxDRm1DRSxxQyxDQ0FBLGlCLENBQ0YsZ0IsQ0RRQSxRLENBSEEsTyxDQUtBLE8sQ0FOQSxTLENJdENJLFEsQ0oyQ0osTSxDQ0pBLEssQ0FLQSxrQixDRzVDSSxlLENGRkosbUIsQ0ZrREUsbUIsQ0NBQSxZLENBQ0Ysa0IsQ0RFRSxjLENFM0NGLHNDLENHbEVFLHlDLENBQ0Esd0MsQ0FDQSxrQixDTHNIRixVLENBSEEsUyxDQ0NBLFMsQ0RGQSxXLENBR0EsVSxDQUVBLFEsQ0FIQSxPLENFakRFLG1CLENHckRBLGEsQ0w2R0EsVSxDSzVHQSxjLENBQ0EseUMsQ0FDQSx3QyxDQUNBLDZCLENMZ0hGLE0sQ0V2REEsZSxDQUNFLFksQ0FDQSxXLENBQ0EscUIsQ0FDQSxpQixDRjJERixPLENFdkRBLGUsQ0FFRSxtQixDRTdCRSxNLENGaUNBLGdCLENGd0RGLG1CLENBR0YsUSxDQ05FLGUsQ0NsREUsbUIsQ0Y2REosUSxDQUNFLGdCLENDUkEsbUIsQ0NoREYsSyxDQUVFLGdCLENBQ0EsbUIsQ0Y4REYsTyxDQUNFLGdCLENBR0YsYSxDQ1ZFLFcsQ0NoREYsVyxDQUVFLGUsQ0V2REUsWSxDRnlERixtQixDRmdFQSxtQixDQUNBLFksQ0FHRixPLENDWkEsZ0IsQ0dqSEksaUIsQ0Z5REYscUIsQ0Z3RUEsMkIsQ0FDQSwwQixDQUdGLGMsQ0NkQSxVLENHdkhJLGlCLENGeURGLEssQ0ZnRkEsTyxDQUNBLFEsQ0FDQSxNLENBQ0Esd04sQ0NoQkEsaUMsQ0N0REYsV0FBQSx1QixFQUVFLGMsQ0FDQSwwTixBRjZFRix5QkFDRSxVLENBQ0UsZSxDQ2hCSixjLENEb0JJLGtCLENFNUVKLGlCLENBRUUsYSxDQUNBLFcsQUZvRkYseUJDcEJBLFUsQ0duSkksZSxDSjRLRixhLENBQ0Usa0IsQ0s1TUEsaUIsQ0p1TEYsYSxDQUNGLFMsQ0R3Q0UsYyxDRWxHQSxZLENGeUdBLGMsQ0FkQSxZLENDN0JGLGtCLENHN0pJLGlCLENGZ0dGLGEsQ0doSUUsUyxDTGlPRixjLENBT0EsYyxDQWRBLFksQ0UxRkEsUyxDRmlHQSxjLENBT0EsYyxDSXhNRSxrQixDQUFBLGdCLENIaU1KLGEsQ0NqRkUsZSxDRitGQSxXLENBQ0Usa0IsQ0FDQSxpQixDS2hQQSxhLENKbU5GLFMsQ0FhRixhLENBSUEsWSxBRDJDQSx5Qk10U0UsVSxDTG1RRixlLENNM1FFLGMsQ0FDQSxrQixDQUNBLGlCLENBQ0EsYSxDQUNBLGtCLENQb1VBLGdCLENDOUJELGEsQ003UkcsZSxDQVBBLFcsQ0NnQ0Ysa0IsQ0FDQSxpQixDQUNBLGEsQ0FDQSxTLENSK1JBLGdCLENDOUJELGEsQ003UkcsZSxDTm1SSixrQixDRHdDRSxnQixDQzlCRCxhLENEa0NHLFMsQ0NsQ0gsYSxDQUlELG9CLEFBUUEsMEJEc0NFLFUsQ0NwQ0Ysa0IsQUFRQSwwQkRzQ0UsVSxDQ3BDRCxrQiIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWl4aW4gZm9udC1mYWNlKCRmb250LW5hbWUsICRmb250LW5hbWUtbG9jYWwsICRwYXRoLCAkd2VpZ2h0OiBub3JtYWwsICRzdHlsZTogbm9ybWFsKSB7XHJcbiAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogcXVvdGUoJGZvbnQtbmFtZSk7XHJcbiAgICBzcmM6IGxvY2FsKHF1b3RlKCN7JGZvbnQtbmFtZS1sb2NhbH0pKSxcclxuICAgIHVybCgjeyRwYXRofS53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLFxyXG4gICAgdXJsKCN7JHBhdGh9LndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKSxcclxuICAgIHVybCgjeyRwYXRofS50dGYpIGZvcm1hdChcInR0ZlwiKSxcclxuICAgIHVybCgjeyRwYXRofS5lb3QpIGZvcm1hdChcImVvdFwiKTtcclxuICAgIGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xyXG4gICAgZm9udC1zdHlsZTogJHN0eWxlO1xyXG4gIH1cclxufVxyXG5cclxuQGluY2x1ZGUgZm9udC1mYWNlKFwiUnViaWtcIiwgXCJSdWJpay1MaWdodFwiLCBcIi4uL2ZvbnRzL1J1YmlrLUxpZ2h0XCIsIDMwMCk7XHJcbkBpbmNsdWRlIGZvbnQtZmFjZShcIlJ1YmlrXCIsIFwiUnViaWstTWVkaXVtXCIsIFwiLi4vZm9udHMvUnViaWstTWVkaXVtXCIsIDUwMCk7XHJcbiIsIkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSdWJpa1wiO1xuICBzcmM6IGxvY2FsKFwiUnViaWstTGlnaHRcIiksIHVybCguLi9mb250cy9SdWJpay1MaWdodC53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQud29mZjIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQudHRmKSBmb3JtYXQoXCJ0dGZcIiksIHVybCguLi9mb250cy9SdWJpay1MaWdodC5lb3QpIGZvcm1hdChcImVvdFwiKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUnViaWtcIjtcbiAgc3JjOiBsb2NhbChcIlJ1YmlrLU1lZGl1bVwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLU1lZGl1bS53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLU1lZGl1bS50dGYpIGZvcm1hdChcInR0ZlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLU1lZGl1bS5lb3QpIGZvcm1hdChcImVvdFwiKTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUnViaWtcIjtcbiAgc3JjOiBsb2NhbChcIlJ1YmlrLUxpZ2h0XCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQud29mZikgZm9ybWF0KFwid29mZlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLUxpZ2h0LndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLUxpZ2h0LnR0ZikgZm9ybWF0KFwidHRmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQuZW90KSBmb3JtYXQoXCJlb3RcIik7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJ1YmlrXCI7XG4gIHNyYzogbG9jYWwoXCJSdWJpay1NZWRpdW1cIiksIHVybCguLi9mb250cy9SdWJpay1NZWRpdW0ud29mZikgZm9ybWF0KFwid29mZlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLU1lZGl1bS53b2ZmMikgZm9ybWF0KFwid29mZjJcIiksIHVybCguLi9mb250cy9SdWJpay1NZWRpdW0udHRmKSBmb3JtYXQoXCJ0dGZcIiksIHVybCguLi9mb250cy9SdWJpay1NZWRpdW0uZW90KSBmb3JtYXQoXCJlb3RcIik7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udDogMTlweC8xLjIgUnViaWssIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDA7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbjogMDtcbn1cblxudWwsXG5saSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxubGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5wIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzZDRUVDNztcbn1cblxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiBub25lO1xufVxuXG5pbnB1dCxcbnNlbGVjdCxcbmJ1dHRvbiB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbmJ1dHRvbixcbmlucHV0W3R5cGU9YnV0dG9uXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctcmlnaHQ6IHZhcigtLWJzLWd1dHRlci14LCAxNXB4KTtcbiAgcGFkZGluZy1sZWZ0OiB2YXIoLS1icy1ndXR0ZXIteCwgMTVweCk7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG59XG5cbi5tYWtlLXJvdyxcbi5mb290ZXIsXG4udGVhbSxcbi5wcmljaW5nLFxuLmNsaWVudHMsXG4ucHJvbW8sXG4uaGVhZGVyIHtcbiAgLS1icy1ndXR0ZXIteDogMzBweDtcbiAgLS1icy1ndXR0ZXIteTogMDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi10b3A6IGNhbGMoLTEgKiB2YXIoLS1icy1ndXR0ZXIteSkpO1xuICBtYXJnaW4tcmlnaHQ6IGNhbGMoLTAuNSAqIHZhcigtLWJzLWd1dHRlci14KSk7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKC0wLjUgKiB2YXIoLS1icy1ndXR0ZXIteCkpO1xuICAtLWJzLWd1dHRlci15OiAxcmVtO1xufVxuXG4ubWFrZS1yb3cgPiAqLFxuLmZvb3RlciA+ICosXG4udGVhbSA+ICosXG4ucHJpY2luZyA+ICosXG4uY2xpZW50cyA+ICosXG4ucHJvbW8gPiAqLFxuLmhlYWRlciA+ICoge1xuICAtbXMtZmxleC1uZWdhdGl2ZTogMDtcbiAgZmxleC1zaHJpbms6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctcmlnaHQ6IGNhbGModmFyKC0tYnMtZ3V0dGVyLXgpICogMC41KTtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLWJzLWd1dHRlci14KSAqIDAuNSk7XG4gIG1hcmdpbi10b3A6IHZhcigtLWJzLWd1dHRlci15KTtcbn1cblxuLmJsb2NrIHtcbiAgYmFja2dyb3VuZDogI2RkZGRkZDtcbiAgcGFkZGluZzogMjBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjYWFhO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZWFkZXIge1xuICBtaW4taGVpZ2h0OiA5MHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMzBweDtcbn1cblxuLnByb21vIHtcbiAgbWluLWhlaWdodDogNDYwcHg7XG4gIG1hcmdpbi1ib3R0b206IDExMHB4O1xufVxuXG4uY2xpZW50cyB7XG4gIG1pbi1oZWlnaHQ6IDgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDE3MHB4O1xufVxuXG4ucHJpY2luZyB7XG4gIG1pbi1oZWlnaHQ6IDQ4MHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMzVweDtcbn1cblxuLnRlYW0ge1xuICBtaW4taGVpZ2h0OiAzNjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTgwcHg7XG59XG5cbi5mb290ZXIge1xuICBtaW4taGVpZ2h0OiAzODBweDtcbn1cblxuLnNsaWNrLXNsaWRlciB7XG4gIG1pbi13aWR0aDogMDtcbn1cblxuLnNsaWNrLWxpc3Qge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2xpY2stdHJhY2sge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5zLW1haW4ge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG5cbi5zLW1haW46OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18xLnN2Z1wiKSA5MCUgLTEwJSBuby1yZXBlYXQsIHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18yLnN2Z1wiKSAtNSUgNDAlIG5vLXJlcGVhdCwgdXJsKFwiLi4vaW1nL3NlY3Rpb24tbWFpbi9zZWN0aW9uXzEtc3ZnXzMuc3ZnXCIpIDEwNSUgOTAlIG5vLXJlcGVhdCwgcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHggNDBweCwgMjAlLCAzMCU7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcbiAgLnMtbWFpbjo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18xLnN2Z1wiKSA5MCUgLTEwJSBuby1yZXBlYXQsIHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18yLnN2Z1wiKSAtNSUgNDAlIG5vLXJlcGVhdCwgdXJsKFwiLi4vaW1nL3NlY3Rpb24tbWFpbi9zZWN0aW9uXzEtc3ZnXzMuc3ZnXCIpIDEwNSUgOTAlIG5vLXJlcGVhdCwgcmdiYSgwLCAwLCAwLCAwLjMpO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDU0MHB4O1xuICB9XG5cbiAgLmNsaWVudHNfX2l0ZW0ge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgLW1zLWZsZXg6IDAgMCBhdXRvO1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDcyMHB4O1xuICB9XG5cbiAgLmhlYWRlcl9fbG9nbyB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuXG4gIC5oZWFkZXJfX25hdiB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDc1JTtcbiAgfVxuXG4gIC5wcm9tb19faXRlbSB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuXG4gIC5jbGllbnRzX19pdGVtIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIC1tcy1mbGV4OiAwIDAgYXV0bztcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlO1xuICB9XG5cbiAgLnByaWNpbmdfX2l0ZW0ge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgLW1zLWZsZXg6IDAgMCBhdXRvO1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzMyU7XG4gIH1cblxuICAudGVhbV9faXRlbSB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuXG4gIC5mb290ZXJfX3NvY2lhbCB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuXG4gIC5mb290ZXJfX2NvbnRhY3Qge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgLW1zLWZsZXg6IDAgMCBhdXRvO1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cblxuICAuZm9vdGVyX19mb3JtIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIC1tcy1mbGV4OiAwIDAgYXV0bztcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogOTYwcHg7XG4gIH1cblxuICAuY2xpZW50c19faXRlbSB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDE2LjY2NjY2NjY3JTtcbiAgfVxuXG4gIC50ZWFtX19pdGVtIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIC1tcy1mbGV4OiAwIDAgYXV0bztcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMjUlO1xuICB9XG5cbiAgLmZvb3Rlcl9fc29jaWFsIHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIC1tcy1mbGV4OiAwIDAgYXV0bztcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlO1xuICB9XG5cbiAgLmZvb3Rlcl9fY29udGFjdCB7XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgICAtbXMtZmxleDogMCAwIGF1dG87XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuXG4gIC5mb290ZXJfX2Zvcm0ge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgLW1zLWZsZXg6IDAgMCBhdXRvO1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiA0MS42NjY2NjY2NyU7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMTQwcHg7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMzIwcHg7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XHJcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZiVzF2Ymk5ZlptOXVkSE11YzJOemN5SXNJbTFoYVc0dVkzTnpJaXdpWTI5dGJXOXVMMTlqYjIxdGIyNHVjMk56Y3lJc0ltaGxiSEJsY25NdlgzWmhjbk11YzJOemN5SXNJaTR1THk0dUwyNXZaR1ZmYlc5a2RXeGxjeTlpYjI5MGMzUnlZWEF2YzJOemN5OXRhWGhwYm5NdlgyTnZiblJoYVc1bGNpNXpZM056SWl3aUxpNHZMaTR2Ym05a1pWOXRiMlIxYkdWekwySnZiM1J6ZEhKaGNDOXpZM056TDIxcGVHbHVjeTlmWW5KbFlXdHdiMmx1ZEhNdWMyTnpjeUlzSW1OdmJXMXZiaTluY21sa0xuTmpjM01pTENJdUxpOHVMaTl1YjJSbFgyMXZaSFZzWlhNdlltOXZkSE4wY21Gd0wzTmpjM012YldsNGFXNXpMMTluY21sa0xuTmpjM01pTENKamIyMXdiMjVsYm5SekwxOXpiR2xqYTJOMWMzUnZiUzV6WTNOeklpd2ljMlZqZEdsdmJuTXZjeTF0WVdsdUxuTmpjM01pTENKb1pXeHdaWEp6TDE5dGFYaHBibk11YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkRSVHRGUVVORkxHOUNRVUZCTzBWQlEwRXNiVTVCUVVFN1JVRkxRU3huUWtGTEswUTdSVUZLTDBRc2EwSkJWREpGTzBGRFN5OUZPMEZFU2tVN1JVRkRSU3h2UWtGQlFUdEZRVU5CTEhkT1FVRkJPMFZCUzBFc1owSkJUV2xGTzBWQlRHcEZMR3RDUVZReVJUdEJRMWN2UlR0QlJGWkZPMFZCUTBVc2IwSkJRVUU3UlVGRFFTeHRUa0ZCUVR0RlFVdEJMR2RDUVVzclJEdEZRVW92UkN4clFrRlVNa1U3UVVOcFFpOUZPMEZFYUVKRk8wVkJRMFVzYjBKQlFVRTdSVUZEUVN4M1RrRkJRVHRGUVV0QkxHZENRVTFwUlR0RlFVeHFSU3hyUWtGVU1rVTdRVU4xUWk5Rk8wRkRjRUpCTzBWQlEwVXNPRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEJSSE5DUmpzN1FVTnNRa0U3UlVGRFJTeFRRVUZCTzBWQlEwRXNjVU5EVEdsQ08wVkVUV3BDTEdWQlFVRTdSVUZEUVN4blFrRkJRVHRCUkhGQ1JqczdRVU5zUWtFN1JVRkRSU3hUUVVGQk8wRkVjVUpHT3p0QlEyeENRVHRGUVVORkxGTkJRVUU3UlVGRFFTeFZRVUZCTzBGRWNVSkdPenRCUTJ4Q1FUdEZRVU5GTEhGQ1FVRkJPMEZFY1VKR096dEJRMnhDUVR0RlFVTkZMRk5CUVVFN1FVUnhRa1k3TzBGRGJFSkJPMFZCUTBVc2NVSkJRVUU3UlVGRFFTeGpRMnhEWVR0QlJuVkVaanM3UVVOc1FrRTdPenM3T3p0RlFVMUZMSE5DUVVGQk8wRkVjVUpHT3p0QlEyeENRVHRGUVVORkxGbEJRVUU3UVVSeFFrWTdPMEZEYkVKQk96czdSVUZIUlN4aFFVRkJPMEZFY1VKR096dEJRMnhDUVR0RlFVTkZMR1ZCUVVFN1JVRkRRU3haUVVGQk8wRkVjVUpHT3p0QlEyeENRVHRGUlRGRVJTeFhRVUZCTzBWQlEwRXNkVU5CUVVFN1JVRkRRU3h6UTBGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc2FVSkJRVUU3UVVoblJrWTdRVWw0UWtrN1JVaEdTanRKU1dwRFRTeG5Ra0ZxUW1sQ08wVk1aMFp5UWp0QlFVTkdPMEZKTjBKSk8wVklSa283U1VscVEwMHNaMEpCYWtKcFFqdEZUSEZHY2tJN1FVRkRSanRCU1d4RFNUdEZTRVpLTzBsSmFrTk5MR2RDUVdwQ2FVSTdSVXd3Um5KQ08wRkJRMFk3UVVsMlEwazdSVWhHU2p0SlNXcERUU3hwUWtGcVFtbENPMFZNSzBaeVFqdEJRVU5HTzBGSk5VTkpPMFZJUmtvN1NVbHFRMDBzYVVKQmFrSnBRanRGVEc5SGNrSTdRVUZEUmpzN1FVTjZRMEU3UlV0c1JVVXNiVUpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNiVUpCUVVFN1RVRkJRU3hsUVVGQk8wVkJSVUVzZVVOQlFVRTdSVUZEUVN3MlEwRkJRVHRGUVVOQkxEUkRRVUZCTzBWTU5rUkJMRzFDUVVGQk8wRkVhMFJHTzBGRGFrUkZPMFZMY2tSQkxHOUNRVUZCTzAxQlFVRXNZMEZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzTmtOQlFVRTdSVUZEUVN3MFEwRkJRVHRGUVVOQkxEaENRVUZCTzBGT2VVZEdPenRCUTJwRVFUdEZRVU5GTEdGQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc2VVSkJRVUU3UlVGRFFTeHpRa0ZCUVR0RlFVTkJMR3RDUVVGQk8wRkViMFJHT3p0QlEycEVRVHRGUVVWRkxHZENRVUZCTzBWQlEwRXNiMEpCUVVFN1FVUnRSRVk3UVVscVJrazdSVWhwUTBFN1NVdHFSVUVzYlVKQlFVRTdVVUZCUVN4clFrRkJRVHRaUVVGQkxHTkJRVUU3U1VGRFFTeFZRVUZCTzBWT2NVaEdPMFZEYkVSRk8wbExjRVZCTEcxQ1FVRkJPMUZCUVVFc2EwSkJRVUU3V1VGQlFTeGpRVUZCTzBsQlEwRXNWVUZCUVR0RlRubElSanRCUVVOR096dEJRMnBFUVR0RlFVVkZMR2xDUVVGQk8wVkJRMEVzYjBKQlFVRTdRVVJ0UkVZN1FVbG9SMGs3UlVnNFEwWTdTVXM1UlVVc2JVSkJRVUU3VVVGQlFTeHJRa0ZCUVR0WlFVRkJMR05CUVVFN1NVRkRRU3hWUVVGQk8wVk9iMGxHTzBGQlEwWTdPMEZEYWtSQk8wVkJSVVVzWjBKQlFVRTdSVUZEUVN4dlFrRkJRVHRCUkcxRVJqdEJTVE5IU1R0RlNIbEVSanRKUzNwR1JTeHRRa0ZCUVR0UlFVRkJMR3RDUVVGQk8xbEJRVUVzWTBGQlFUdEpRVU5CTEZWQlFVRTdSVTRyU1VZN1FVRkRSanRCU1dwSVNUdEZTSGxFUmp0SlMzcEdSU3h0UWtGQlFUdFJRVUZCTEd0Q1FVRkJPMWxCUVVFc1kwRkJRVHRKUVVOQkxHMUNRVUZCTzBWT2NVcEdPMEZCUTBZN1FVbDJTRWs3UlVoNVJFWTdTVXQ2UmtVc2JVSkJRVUU3VVVGQlFTeHJRa0ZCUVR0WlFVRkJMR05CUVVFN1NVRkRRU3h0UWtGQlFUdEZUakpLUmp0QlFVTkdPenRCUTNaRVFUdEZRVVZGTEdsQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UVVSNVJFWTdRVWxzU1VrN1JVZ3dSVVk3U1VzeFIwVXNiVUpCUVVFN1VVRkJRU3hyUWtGQlFUdFpRVUZCTEdOQlFVRTdTVUZEUVN4dFFrRkJRVHRGVG5OTFJqdEJRVU5HT3p0QlEzaEVRVHRGUVVWRkxHbENRVUZCTzBWQlEwRXNiMEpCUVVFN1FVUXdSRVk3UVVrM1NVazdSVWh2UmtZN1NVdHdTRVVzYlVKQlFVRTdVVUZCUVN4clFrRkJRVHRaUVVGQkxHTkJRVUU3U1VGRFFTeFZRVUZCTzBWT2FVeEdPMEZCUTBZN1FVbHVTa2s3UlVodlJrWTdTVXR3U0VVc2JVSkJRVUU3VVVGQlFTeHJRa0ZCUVR0WlFVRkJMR05CUVVFN1NVRkRRU3hWUVVGQk8wVk9kVXhHTzBGQlEwWTdPMEZETlVSQk8wVkJSVVVzYVVKQlFVRTdRVVE0UkVZN1FVazNTa2s3UlVoblIwWTdTVXRvU1VVc2JVSkJRVUU3VVVGQlFTeHJRa0ZCUVR0WlFVRkJMR05CUVVFN1NVRkRRU3hWUVVGQk8wVk9hVTFHTzBGQlEwWTdRVWx1UzBrN1JVaG5SMFk3U1V0b1NVVXNiVUpCUVVFN1VVRkJRU3hyUWtGQlFUdFpRVUZCTEdOQlFVRTdTVUZEUVN4dFFrRkJRVHRGVG5WTlJqdEJRVU5HTzBGSmVrdEpPMFZJZDBkR08wbExlRWxGTEcxQ1FVRkJPMUZCUVVFc2EwSkJRVUU3V1VGQlFTeGpRVUZCTzBsQlEwRXNWVUZCUVR0RlRqWk5SanRCUVVOR08wRkpMMHRKTzBWSWQwZEdPMGxMZUVsRkxHMUNRVUZCTzFGQlFVRXNhMEpCUVVFN1dVRkJRU3hqUVVGQk8wbEJRMEVzVlVGQlFUdEZUbTFPUmp0QlFVTkdPMEZKY2t4Sk8wVklaMGhHTzBsTGFFcEZMRzFDUVVGQk8xRkJRVUVzYTBKQlFVRTdXVUZCUVN4alFVRkJPMGxCUTBFc1YwRkJRVHRGVG5sT1JqdEJRVU5HTzBGSk0weEpPMFZJWjBoR08wbExhRXBGTEcxQ1FVRkJPMUZCUVVFc2EwSkJRVUU3V1VGQlFTeGpRVUZCTzBsQlEwRXNiVUpCUVVFN1JVNHJUa1k3UVVGRFJqczdRVTlvVVVFN1JVRkRSU3haUVVGQk8wRlFiVkZHT3p0QlQycFJRVHRGUVVORkxHZENRVUZCTzBGUWIxRkdPenRCVDJoUlFUdEZRVU5GTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBGUWJWRkdPenRCVVRWUlFUdEZRVU5GTEdsQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHpRa0ZCUVR0RlFVTkJMRFJDUVVGQk8wVkJRMEVzTWtKQlFVRTdRVklyVVVZN1FWRTVVVVU3UlVGRFJTeFhRVUZCTzBWRFowTkdMR3RDUkM5Q2IwSTdSVU5uUTNCQ0xFMUVhRU52UXp0RlEybERjRU1zVVVScVF5dERPMFZEYTBNdlF5eFRSR3hETWtRN1JVTnRRek5FTEU5RWJrTnhSVHRGUVVOdVJTeHpUMEZEVVR0RlFVbFNMRzlEUVVGQk8wRlNaMUpLTzBGQlEwRTdRVUZEUVN4bFFVRmxMSEZQUVVGeFR6dEJRVU53VURzN1EwRkZRenM3UVVGRlJEczdRVUZGUVRzN1FVRkZRVHM3UTBGRlF6czdRVUZGUkRzN1FVRkZRVHM3UVVGRlFUczdRMEZGUXpzN1FVRkZSRHM3UVVGRlFUczdRVUZGUVRzN1EwRkZRenM3UVVGRlJEczdRVUZGUVRzN1FVRkZRVHM3UTBGRlF6czdRVUZGUkRzN1FVRkZRVHM3UVVGRlFTSXNJbVpwYkdVaU9pSnRZV2x1TG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJa0J0YVhocGJpQm1iMjUwTFdaaFkyVW9KR1p2Ym5RdGJtRnRaU3dnSkdadmJuUXRibUZ0WlMxc2IyTmhiQ3dnSkhCaGRHZ3NJQ1IzWldsbmFIUTZJRzV2Y20xaGJDd2dKSE4wZVd4bE9pQnViM0p0WVd3cElIdGNjbHh1SUNCQVptOXVkQzFtWVdObElIdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJ4ZFc5MFpTZ2tabTl1ZEMxdVlXMWxLVHRjY2x4dUlDQWdJSE55WXpvZ2JHOWpZV3dvY1hWdmRHVW9JM3NrWm05dWRDMXVZVzFsTFd4dlkyRnNmU2twTEZ4eVhHNGdJQ0FnZFhKc0tDTjdKSEJoZEdoOUxuZHZabVlwSUdadmNtMWhkQ2hjSW5kdlptWmNJaWtzWEhKY2JpQWdJQ0IxY213b0kzc2tjR0YwYUgwdWQyOW1aaklwSUdadmNtMWhkQ2hjSW5kdlptWXlYQ0lwTEZ4eVhHNGdJQ0FnZFhKc0tDTjdKSEJoZEdoOUxuUjBaaWtnWm05eWJXRjBLRndpZEhSbVhDSXBMRnh5WEc0Z0lDQWdkWEpzS0NON0pIQmhkR2g5TG1WdmRDa2dabTl5YldGMEtGd2laVzkwWENJcE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJQ1IzWldsbmFIUTdYSEpjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUFrYzNSNWJHVTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzVBYVc1amJIVmtaU0JtYjI1MExXWmhZMlVvWENKU2RXSnBhMXdpTENCY0lsSjFZbWxyTFV4cFoyaDBYQ0lzSUZ3aUxpNHZabTl1ZEhNdlVuVmlhV3N0VEdsbmFIUmNJaXdnTXpBd0tUdGNjbHh1UUdsdVkyeDFaR1VnWm05dWRDMW1ZV05sS0Z3aVVuVmlhV3RjSWl3Z1hDSlNkV0pwYXkxTlpXUnBkVzFjSWl3Z1hDSXVMaTltYjI1MGN5OVNkV0pwYXkxTlpXUnBkVzFjSWl3Z05UQXdLVHRjY2x4dUlpd2lRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWxKMVltbHJYQ0k3WEc0Z0lITnlZem9nYkc5allXd29YQ0pTZFdKcGF5MU1hV2RvZEZ3aUtTd2dkWEpzS0M0dUwyWnZiblJ6TDFKMVltbHJMVXhwWjJoMExuZHZabVlwSUdadmNtMWhkQ2hjSW5kdlptWmNJaWtzSUhWeWJDZ3VMaTltYjI1MGN5OVNkV0pwYXkxTWFXZG9kQzUzYjJabU1pa2dabTl5YldGMEtGd2lkMjltWmpKY0lpa3NJSFZ5YkNndUxpOW1iMjUwY3k5U2RXSnBheTFNYVdkb2RDNTBkR1lwSUdadmNtMWhkQ2hjSW5SMFpsd2lLU3dnZFhKc0tDNHVMMlp2Ym5SekwxSjFZbWxyTFV4cFoyaDBMbVZ2ZENrZ1ptOXliV0YwS0Z3aVpXOTBYQ0lwTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTXpBd08xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc1OVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVW5WaWFXdGNJanRjYmlBZ2MzSmpPaUJzYjJOaGJDaGNJbEoxWW1sckxVMWxaR2wxYlZ3aUtTd2dkWEpzS0M0dUwyWnZiblJ6TDFKMVltbHJMVTFsWkdsMWJTNTNiMlptS1NCbWIzSnRZWFFvWENKM2IyWm1YQ0lwTENCMWNtd29MaTR2Wm05dWRITXZVblZpYVdzdFRXVmthWFZ0TG5kdlptWXlLU0JtYjNKdFlYUW9YQ0ozYjJabU1sd2lLU3dnZFhKc0tDNHVMMlp2Ym5SekwxSjFZbWxyTFUxbFpHbDFiUzUwZEdZcElHWnZjbTFoZENoY0luUjBabHdpS1N3Z2RYSnNLQzR1TDJadmJuUnpMMUoxWW1sckxVMWxaR2wxYlM1bGIzUXBJR1p2Y20xaGRDaGNJbVZ2ZEZ3aUtUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsSjFZbWxyWENJN1hHNGdJSE55WXpvZ2JHOWpZV3dvWENKU2RXSnBheTFNYVdkb2RGd2lLU3dnZFhKc0tDNHVMMlp2Ym5SekwxSjFZbWxyTFV4cFoyaDBMbmR2Wm1ZcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2d1TGk5bWIyNTBjeTlTZFdKcGF5MU1hV2RvZEM1M2IyWm1NaWtnWm05eWJXRjBLRndpZDI5bVpqSmNJaWtzSUhWeWJDZ3VMaTltYjI1MGN5OVNkV0pwYXkxTWFXZG9kQzUwZEdZcElHWnZjbTFoZENoY0luUjBabHdpS1N3Z2RYSnNLQzR1TDJadmJuUnpMMUoxWW1sckxVeHBaMmgwTG1WdmRDa2dabTl5YldGMEtGd2laVzkwWENJcE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNTlYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVVuVmlhV3RjSWp0Y2JpQWdjM0pqT2lCc2IyTmhiQ2hjSWxKMVltbHJMVTFsWkdsMWJWd2lLU3dnZFhKc0tDNHVMMlp2Ym5SekwxSjFZbWxyTFUxbFpHbDFiUzUzYjJabUtTQm1iM0p0WVhRb1hDSjNiMlptWENJcExDQjFjbXdvTGk0dlptOXVkSE12VW5WaWFXc3RUV1ZrYVhWdExuZHZabVl5S1NCbWIzSnRZWFFvWENKM2IyWm1NbHdpS1N3Z2RYSnNLQzR1TDJadmJuUnpMMUoxWW1sckxVMWxaR2wxYlM1MGRHWXBJR1p2Y20xaGRDaGNJblIwWmx3aUtTd2dkWEpzS0M0dUwyWnZiblJ6TDFKMVltbHJMVTFsWkdsMWJTNWxiM1FwSUdadmNtMWhkQ2hjSW1WdmRGd2lLVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1ZlZ4dUtpd2dLam82WW1WbWIzSmxMQ0FxT2pwaFpuUmxjaUI3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJTZFdKcGF5d2dRWEpwWVd3c0lITmhibk10YzJWeWFXWTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UbHdlRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TWp0Y2JuMWNibHh1YURFc0lHZ3lMQ0JvTXl3Z2FEUXNJR2cxTENCb05pQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JuMWNibHh1ZFd3c0lHeHBJSHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dWZWeHVYRzVzYVNCN1hHNGdJR3hwYzNRdGMzUjViR1V0ZEhsd1pUb2dibTl1WlR0Y2JuMWNibHh1Y0NCN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVZU0I3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNNMlEwVkZRemM3WEc1OVhHNWNibUYxWkdsdkxGeHVZMkZ1ZG1GekxGeHVhV1p5WVcxbExGeHVhVzFuTEZ4dWMzWm5MRnh1ZG1sa1pXOGdlMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1ZlZ4dVhHNTBaWGgwWVhKbFlTQjdYRzRnSUhKbGMybDZaVG9nYm05dVpUdGNibjFjYmx4dWFXNXdkWFFzWEc1elpXeGxZM1FzWEc1aWRYUjBiMjRnZTF4dUlDQnZkWFJzYVc1bE9pQnViMjVsTzF4dWZWeHVYRzVpZFhSMGIyNHNJR2x1Y0hWMFczUjVjR1U5WW5WMGRHOXVYU0I3WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdZbTl5WkdWeU9pQnViMjVsTzF4dWZWeHVYRzR1WTI5dWRHRnBibVZ5SUh0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUhaaGNpZ3RMV0p6TFdkMWRIUmxjaTE0TENBeE5YQjRLVHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUIyWVhJb0xTMWljeTFuZFhSMFpYSXRlQ3dnTVRWd2VDazdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dZWFYwYnp0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SUdGMWRHODdYRzU5WEc1QWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ05UYzJjSGdwSUh0Y2JpQWdMbU52Ym5SaGFXNWxjaUI3WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PaUExTkRCd2VEdGNiaUFnZlZ4dWZWeHVRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJRGMyT0hCNEtTQjdYRzRnSUM1amIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUcxaGVDMTNhV1IwYURvZ056SXdjSGc3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBNU9USndlQ2tnZTF4dUlDQXVZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJRGsyTUhCNE8xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dNVEl3TUhCNEtTQjdYRzRnSUM1amIyNTBZV2x1WlhJZ2UxeHVJQ0FnSUcxaGVDMTNhV1IwYURvZ01URTBNSEI0TzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ01UUXdNSEI0S1NCN1hHNGdJQzVqYjI1MFlXbHVaWElnZTF4dUlDQWdJRzFoZUMxM2FXUjBhRG9nTVRNeU1IQjRPMXh1SUNCOVhHNTlYRzVjYmk1dFlXdGxMWEp2ZHl3Z0xtWnZiM1JsY2l3Z0xuUmxZVzBzSUM1d2NtbGphVzVuTENBdVkyeHBaVzUwY3l3Z0xuQnliMjF2TENBdWFHVmhaR1Z5SUh0Y2JpQWdMUzFpY3kxbmRYUjBaWEl0ZURvZ016QndlRHRjYmlBZ0xTMWljeTFuZFhSMFpYSXRlVG9nTUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxM2NtRndPaUIzY21Gd08xeHVJQ0J0WVhKbmFXNHRkRzl3T2lCallXeGpLQzB4SUNvZ2RtRnlLQzB0WW5NdFozVjBkR1Z5TFhrcEtUdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQmpZV3hqS0Mwd0xqVWdLaUIyWVhJb0xTMWljeTFuZFhSMFpYSXRlQ2twTzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nWTJGc1l5Z3RNQzQxSUNvZ2RtRnlLQzB0WW5NdFozVjBkR1Z5TFhncEtUdGNiaUFnTFMxaWN5MW5kWFIwWlhJdGVUb2dNWEpsYlR0Y2JuMWNiaTV0WVd0bExYSnZkeUErSUNvc0lDNW1iMjkwWlhJZ1BpQXFMQ0F1ZEdWaGJTQStJQ29zSUM1d2NtbGphVzVuSUQ0Z0tpd2dMbU5zYVdWdWRITWdQaUFxTENBdWNISnZiVzhnUGlBcUxDQXVhR1ZoWkdWeUlENGdLaUI3WEc0Z0lHWnNaWGd0YzJoeWFXNXJPaUF3TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQndZV1JrYVc1bkxYSnBaMmgwT2lCallXeGpLSFpoY2lndExXSnpMV2QxZEhSbGNpMTRLU0FxSURBdU5TazdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dZMkZzWXloMllYSW9MUzFpY3kxbmRYUjBaWEl0ZUNrZ0tpQXdMalVwTzF4dUlDQnRZWEpuYVc0dGRHOXdPaUIyWVhJb0xTMWljeTFuZFhSMFpYSXRlU2s3WEc1OVhHNWNiaTVpYkc5amF5QjdYRzRnSUhCaFpHUnBibWM2SURJd2NIZzdYRzRnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJSa1pHUmtaRHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kyRmhZVHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVmVnh1WEc0dWFHVmhaR1Z5SUh0Y2JpQWdiV2x1TFdobGFXZG9kRG9nT1RCd2VEdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNVE13Y0hnN1hHNTlYRzVBYldWa2FXRWdLRzFwYmkxM2FXUjBhRG9nTnpZNGNIZ3BJSHRjYmlBZ0xtaGxZV1JsY2w5ZmJHOW5ieUI3WEc0Z0lDQWdabXhsZURvZ01DQXdJR0YxZEc4N1hHNGdJQ0FnZDJsa2RHZzZJREkxSlR0Y2JpQWdmVnh1SUNBdWFHVmhaR1Z5WDE5dVlYWWdlMXh1SUNBZ0lHWnNaWGc2SURBZ01DQmhkWFJ2TzF4dUlDQWdJSGRwWkhSb09pQTNOU1U3WEc0Z0lIMWNibjFjYmx4dUxuQnliMjF2SUh0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTkRZd2NIZzdYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV4TUhCNE8xeHVmVnh1UUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0I3WEc0Z0lDNXdjbTl0YjE5ZmFYUmxiU0I3WEc0Z0lDQWdabXhsZURvZ01DQXdJR0YxZEc4N1hHNGdJQ0FnZDJsa2RHZzZJRFV3SlR0Y2JpQWdmVnh1ZlZ4dVhHNHVZMnhwWlc1MGN5QjdYRzRnSUcxcGJpMW9aV2xuYUhRNklEZ3djSGc3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFM01IQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklEVTNObkI0S1NCN1hHNGdJQzVqYkdsbGJuUnpYMTlwZEdWdElIdGNiaUFnSUNCbWJHVjRPaUF3SURBZ1lYVjBienRjYmlBZ0lDQjNhV1IwYURvZ05UQWxPMXh1SUNCOVhHNTlYRzVBYldWa2FXRWdLRzFwYmkxM2FXUjBhRG9nTnpZNGNIZ3BJSHRjYmlBZ0xtTnNhV1Z1ZEhOZlgybDBaVzBnZTF4dUlDQWdJR1pzWlhnNklEQWdNQ0JoZFhSdk8xeHVJQ0FnSUhkcFpIUm9PaUF6TXk0ek16TXpNek16TXlVN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQTVPVEp3ZUNrZ2UxeHVJQ0F1WTJ4cFpXNTBjMTlmYVhSbGJTQjdYRzRnSUNBZ1pteGxlRG9nTUNBd0lHRjFkRzg3WEc0Z0lDQWdkMmxrZEdnNklERTJMalkyTmpZMk5qWTNKVHRjYmlBZ2ZWeHVmVnh1WEc0dWNISnBZMmx1WnlCN1hHNGdJRzFwYmkxb1pXbG5hSFE2SURRNE1IQjRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF5TXpWd2VEdGNibjFjYmtCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQXVjSEpwWTJsdVoxOWZhWFJsYlNCN1hHNGdJQ0FnWm14bGVEb2dNQ0F3SUdGMWRHODdYRzRnSUNBZ2QybGtkR2c2SURNekxqTXpNek16TXpNekpUdGNiaUFnZlZ4dWZWeHVYRzR1ZEdWaGJTQjdYRzRnSUcxcGJpMW9aV2xuYUhRNklETTJNSEI0TzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE9EQndlRHRjYm4xY2JrQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0F1ZEdWaGJWOWZhWFJsYlNCN1hHNGdJQ0FnWm14bGVEb2dNQ0F3SUdGMWRHODdYRzRnSUNBZ2QybGtkR2c2SURVd0pUdGNiaUFnZlZ4dWZWeHVRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJRGs1TW5CNEtTQjdYRzRnSUM1MFpXRnRYMTlwZEdWdElIdGNiaUFnSUNCbWJHVjRPaUF3SURBZ1lYVjBienRjYmlBZ0lDQjNhV1IwYURvZ01qVWxPMXh1SUNCOVhHNTlYRzVjYmk1bWIyOTBaWElnZTF4dUlDQnRhVzR0YUdWcFoyaDBPaUF6T0RCd2VEdGNibjFjYmtCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQXVabTl2ZEdWeVgxOXpiMk5wWVd3Z2UxeHVJQ0FnSUdac1pYZzZJREFnTUNCaGRYUnZPMXh1SUNBZ0lIZHBaSFJvT2lBMU1DVTdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV2x1TFhkcFpIUm9PaUE1T1RKd2VDa2dlMXh1SUNBdVptOXZkR1Z5WDE5emIyTnBZV3dnZTF4dUlDQWdJR1pzWlhnNklEQWdNQ0JoZFhSdk8xeHVJQ0FnSUhkcFpIUm9PaUF6TXk0ek16TXpNek16TXlVN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0F1Wm05dmRHVnlYMTlqYjI1MFlXTjBJSHRjYmlBZ0lDQm1iR1Y0T2lBd0lEQWdZWFYwYnp0Y2JpQWdJQ0IzYVdSMGFEb2dOVEFsTzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ09Ua3ljSGdwSUh0Y2JpQWdMbVp2YjNSbGNsOWZZMjl1ZEdGamRDQjdYRzRnSUNBZ1pteGxlRG9nTUNBd0lHRjFkRzg3WEc0Z0lDQWdkMmxrZEdnNklESTFKVHRjYmlBZ2ZWeHVmVnh1UUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLU0I3WEc0Z0lDNW1iMjkwWlhKZlgyWnZjbTBnZTF4dUlDQWdJR1pzWlhnNklEQWdNQ0JoZFhSdk8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dPVGt5Y0hncElIdGNiaUFnTG1admIzUmxjbDlmWm05eWJTQjdYRzRnSUNBZ1pteGxlRG9nTUNBd0lHRjFkRzg3WEc0Z0lDQWdkMmxrZEdnNklEUXhMalkyTmpZMk5qWTNKVHRjYmlBZ2ZWeHVmVnh1WEc0dWMyeHBZMnN0YzJ4cFpHVnlJSHRjYmlBZ2JXbHVMWGRwWkhSb09pQXdPMXh1ZlZ4dVhHNHVjMnhwWTJzdGJHbHpkQ0I3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNTlYRzVjYmk1emJHbGpheTEwY21GamF5QjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzU5WEc1Y2JpNXpMVzFoYVc0Z2UxeHVJQ0J0YVc0dGFHVnBaMmgwT2lBeE1EQjJhRHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeU8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSTdYRzU5WEc0dWN5MXRZV2x1T2pwaFpuUmxjaUI3WEc0Z0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnZEc5d09pQXdPMXh1SUNCeWFXZG9kRG9nTUR0Y2JpQWdZbTkwZEc5dE9pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQmlZV05yWjNKdmRXNWtPaUIxY213b1hDSXVMaTlwYldjdmMyVmpkR2x2YmkxdFlXbHVMM05sWTNScGIyNWZNUzF6ZG1kZk1TNXpkbWRjSWlrZ09UQWxJQzB4TUNVZ2JtOHRjbVZ3WldGMExDQjFjbXdvWENJdUxpOXBiV2N2YzJWamRHbHZiaTF0WVdsdUwzTmxZM1JwYjI1Zk1TMXpkbWRmTWk1emRtZGNJaWtnTFRVbElEUXdKU0J1YnkxeVpYQmxZWFFzSUhWeWJDaGNJaTR1TDJsdFp5OXpaV04wYVc5dUxXMWhhVzR2YzJWamRHbHZibDh4TFhOMloxOHpMbk4yWjF3aUtTQXhNRFVsSURrd0pTQnVieTF5WlhCbFlYUXNJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHpLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRJRFF3Y0hnc0lESXdKU3dnTXpBbE8xeHVmVnh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc0dWN5MXRZV2x1T2pwaFpuUmxjbnRpWVdOclozSnZkVzVrT25WeWJDaGNJaTR1TDJsdFp5OXpaV04wYVc5dUxXMWhhVzR2YzJWamRHbHZibDh4TFhOMloxOHhMbk4yWjF3aUtTQTVNQ1VnTFRFd0pTQnVieTF5WlhCbFlYUXNJSFZ5YkNoY0lpNHVMMmx0Wnk5elpXTjBhVzl1TFcxaGFXNHZjMlZqZEdsdmJsOHhMWE4yWjE4eUxuTjJaMXdpS1NBdE5TVWdOREFsSUc1dkxYSmxjR1ZoZEN3Z2RYSnNLRndpTGk0dmFXMW5MM05sWTNScGIyNHRiV0ZwYmk5elpXTjBhVzl1WHpFdGMzWm5Yek11YzNablhDSXBJREV3TlNVZ09UQWxJRzV2TFhKbGNHVmhkQ3dnY21kaVlTZ3dMQ0F3TENBd0xDQXdMak1wZlZ4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURVM05uQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURrNU1uQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURFeU1EQndlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBeE5EQXdjSGdwZTF4dVhHNUFjM1Z3Y0c5eWRITWdLQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVHB1YjI1bEtYdGNibHh1ZlZ4dVhHNTlYRzRpTENKQWFXMXdiM0owSUZ3aVptOXVkSE5jSWp0Y2NseHVRR2x0Y0c5eWRDQmNJbWR5YVdSY0lqdGNjbHh1WEhKY2Jpb3NJQ282T21KbFptOXlaU3dnS2pvNllXWjBaWElnZTF4eVhHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hISmNibjFjY2x4dVhISmNibHh5WEc1aWIyUjVJSHRjY2x4dUlDQnRZWEpuYVc0NklEQTdYSEpjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ1JpWVhObFgyWnZiblJmWm1GdGFXeDVPMXh5WEc0Z0lHWnZiblF0YzJsNlpUb2dNVGx3ZUR0Y2NseHVJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlPMXh5WEc1OVhISmNibHh5WEc1b01Td2dhRElzSUdnekxDQm9OQ3dnYURVc0lHZzJJSHRjY2x4dUlDQnRZWEpuYVc0NklEQTdYSEpjYm4xY2NseHVYSEpjYm5Wc0xDQnNhU0I3WEhKY2JpQWdiV0Z5WjJsdU9pQXdPMXh5WEc0Z0lIQmhaR1JwYm1jNklEQTdYSEpjYm4xY2NseHVYSEpjYm14cElIdGNjbHh1SUNCc2FYTjBMWE4wZVd4bExYUjVjR1U2SUc1dmJtVTdYSEpjYm4xY2NseHVYSEpjYm5BZ2UxeHlYRzRnSUcxaGNtZHBiam9nTUR0Y2NseHVmVnh5WEc1Y2NseHVZU0I3WEhKY2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4eVhHNGdJR052Ykc5eU9pQWtZV05qWlc1MFgyTnZiRzl5TzF4eVhHNTlYSEpjYmx4eVhHNWhkV1JwYnl4Y2NseHVZMkZ1ZG1GekxGeHlYRzVwWm5KaGJXVXNYSEpjYm1sdFp5eGNjbHh1YzNabkxGeHlYRzUyYVdSbGJ5QjdYSEpjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUcxcFpHUnNaVHRjY2x4dWZWeHlYRzVjY2x4dWRHVjRkR0Z5WldFZ2UxeHlYRzRnSUhKbGMybDZaVG9nYm05dVpUdGNjbHh1ZlZ4eVhHNWNjbHh1YVc1d2RYUXNYSEpjYm5ObGJHVmpkQ3hjY2x4dVluVjBkRzl1SUh0Y2NseHVJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHlYRzU5WEhKY2JseHlYRzVpZFhSMGIyNHNJR2x1Y0hWMFczUjVjR1U5WENKaWRYUjBiMjVjSWwwZ2UxeHlYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dUlDQmliM0prWlhJNklHNXZibVU3WEhKY2JuMWNjbHh1WEhKY2JpNWpiMjUwWVdsdVpYSWdlMXh5WEc0Z0lFQnBibU5zZFdSbElHMWhhMlV0WTI5dWRHRnBibVZ5S0NrN1hISmNiaUFnUUdsdVkyeDFaR1VnYldGclpTMXRZWGd0ZDJsa2RHZ3RZMjl1ZEdGcGJtVnlLQ2s3WEhKY2JuMWNjbHh1WEhKY2JpOHZMbU52YkNCN1hISmNiaTh2SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalpXVmxaV1ZsTzF4eVhHNHZMeUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJGaFlUdGNjbHh1THk5OVhISmNibHh5WEc0dWJXRnJaUzF5YjNjZ2UxeHlYRzRnSUVCcGJtTnNkV1JsSUcxaGEyVXRjbTkzS0NrN1hISmNiaUFnTFMxaWN5MW5kWFIwWlhJdGVUb2dNWEpsYlR0Y2NseHVJQ0FtSUQ0Z0tpQWdlMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiV0ZyWlMxamIyd3RjbVZoWkhrb0tUdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTh2SUcxcGVHbHVJRzFsWkdsaExXSnlaV0ZyY0c5cGJuUXRkWEFvS1NBdElHMXZZbWxzWlNCbWFYSnpkRnh5WEc0dkx5QnRhWGhwYmlCdFpXUnBZUzFpY21WaGEzQnZhVzUwTFdSdmQyNG9LU0F0SUdSbGMydDBiM0FnWm1seWMzUmNjbHh1WEhKY2JpNWliRzlqYXlCN1hISmNiaUFnY0dGa1pHbHVaem9nTWpCd2VEdGNjbHh1SUNCb1pXbG5hSFE2SURFd01DVTdYSEpjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyUmtaR1JrWkR0Y2NseHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqWVdGaE8xeHlYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2NseHVmVnh5WEc1Y2NseHVMbWhsWVdSbGNpQjdYSEpjYmlBZ1FHVjRkR1Z1WkNBdWJXRnJaUzF5YjNjN1hISmNiaUFnYldsdUxXaGxhV2RvZERvZ09UQndlRHRjY2x4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE16QndlRHRjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnYldWa2FXRXRZbkpsWVd0d2IybHVkQzExY0NodFpDa2dlMXh5WEc0Z0lDQWdKbDlmYkc5bmJ5QjdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJRzFoYTJVdFkyOXNLRE1wTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmw5ZmJtRjJJSHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYldGclpTMWpiMndvT1NrN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHVjSEp2Ylc4Z2UxeHlYRzRnSUVCbGVIUmxibVFnTG0xaGEyVXRjbTkzTzF4eVhHNGdJRzFwYmkxb1pXbG5hSFE2SURRMk1IQjRPMXh5WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFeE1IQjRPMXh5WEc0Z0lDWmZYMmwwWlcwZ2UxeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2JXVmthV0V0WW5KbFlXdHdiMmx1ZEMxMWNDaHRaQ2tnZTF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCdFlXdGxMV052YkNnMktUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTVqYkdsbGJuUnpJSHRjY2x4dUlDQkFaWGgwWlc1a0lDNXRZV3RsTFhKdmR6dGNjbHh1SUNCdGFXNHRhR1ZwWjJoME9pQTRNSEI0TzF4eVhHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERTNNSEI0TzF4eVhHNGdJQ1pmWDJsMFpXMGdlMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFdFluSmxZV3R3YjJsdWRDMTFjQ2h6YlNrZ2UxeHlYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQnRZV3RsTFdOdmJDZzJLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaExXSnlaV0ZyY0c5cGJuUXRkWEFvYldRcElIdGNjbHh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdiV0ZyWlMxamIyd29OQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0J0WldScFlTMWljbVZoYTNCdmFXNTBMWFZ3S0d4bktTQjdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJRzFoYTJVdFkyOXNLRElwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dUxuQnlhV05wYm1jZ2UxeHlYRzRnSUVCbGVIUmxibVFnTG0xaGEyVXRjbTkzTzF4eVhHNGdJRzFwYmkxb1pXbG5hSFE2SURRNE1IQjRPMXh5WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJek5YQjRPMXh5WEc0Z0lDWmZYMmwwWlcwZ2UxeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2JXVmthV0V0WW5KbFlXdHdiMmx1ZEMxMWNDaHRaQ2tnZTF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCdFlXdGxMV052YkNnMEtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dUxuUmxZVzBnZTF4eVhHNGdJRUJsZUhSbGJtUWdMbTFoYTJVdGNtOTNPMXh5WEc0Z0lHMXBiaTFvWldsbmFIUTZJRE0yTUhCNE8xeHlYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREU0TUhCNE8xeHlYRzRnSUNaZlgybDBaVzBnZTF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnYldWa2FXRXRZbkpsWVd0d2IybHVkQzExY0NodFpDa2dlMXh5WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0J0WVd0bExXTnZiQ2cyS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUVCcGJtTnNkV1JsSUcxbFpHbGhMV0p5WldGcmNHOXBiblF0ZFhBb2JHY3BJSHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYldGclpTMWpiMndvTXlrN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlYSEpjYmk1bWIyOTBaWElnZTF4eVhHNGdJRUJsZUhSbGJtUWdMbTFoYTJVdGNtOTNPMXh5WEc0Z0lHMXBiaTFvWldsbmFIUTZJRE00TUhCNE8xeHlYRzRnSUNaZlgzTnZZMmxoYkNCN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCdFpXUnBZUzFpY21WaGEzQnZhVzUwTFhWd0tHMWtLU0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUcxaGEyVXRZMjlzS0RZcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2JXVmthV0V0WW5KbFlXdHdiMmx1ZEMxMWNDaHNaeWtnZTF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCdFlXdGxMV052YkNnMEtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNiaUFnSmw5ZlkyOXVkR0ZqZENCN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCdFpXUnBZUzFpY21WaGEzQnZhVzUwTFhWd0tHMWtLU0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUcxaGEyVXRZMjlzS0RZcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2JXVmthV0V0WW5KbFlXdHdiMmx1ZEMxMWNDaHNaeWtnZTF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCdFlXdGxMV052YkNnektUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNiaUFnSmw5ZlptOXliU0I3WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0J0WldScFlTMWljbVZoYTNCdmFXNTBMWFZ3S0cxa0tTQjdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJRzFoYTJVdFkyOXNLREV5S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUVCcGJtTnNkV1JsSUcxbFpHbGhMV0p5WldGcmNHOXBiblF0ZFhBb2JHY3BJSHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYldGclpTMWpiMndvTlNrN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlJaXdpSkdGalkyVnVkRjlqYjJ4dmNqb2dJelpEUlVWRE56dGNjbHh1SkhSbGVIUmZZMjlzYjNJNklDTmxNR1V3WlRBN1hISmNibHh5WEc0a1kyOXVkR0ZwYm1WeVgzZHBaSFJvT2lBeE1UUXdjSGc3WEhKY2JseHlYRzRrWW1GelpWOW1iMjUwWDJaaGJXbHNlVG9nVW5WaWFXc3NJRUZ5YVdGc0xDQnpZVzV6TFhObGNtbG1PeUlzSWk4dklFTnZiblJoYVc1bGNpQnRhWGhwYm5OY2JseHVRRzFwZUdsdUlHMWhhMlV0WTI5dWRHRnBibVZ5S0NSbmRYUjBaWEk2SUNSamIyNTBZV2x1WlhJdGNHRmtaR2x1WnkxNEtTQjdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQjJZWElvTFMwamV5UjJZWEpwWVdKc1pTMXdjbVZtYVhoOVozVjBkR1Z5TFhnc0lDTjdKR2QxZEhSbGNuMHBPMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJSFpoY2lndExTTjdKSFpoY21saFlteGxMWEJ5WldacGVIMW5kWFIwWlhJdGVDd2dJM3NrWjNWMGRHVnlmU2s3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGJ6dGNiaUFnYldGeVoybHVMV3hsWm5RNklHRjFkRzg3WEc1OVhHNGlMQ0l2THlCQ2NtVmhhM0J2YVc1MElIWnBaWGR3YjNKMElITnBlbVZ6SUdGdVpDQnRaV1JwWVNCeGRXVnlhV1Z6TGx4dUx5OWNiaTh2SUVKeVpXRnJjRzlwYm5SeklHRnlaU0JrWldacGJtVmtJR0Z6SUdFZ2JXRndJRzltSUNodVlXMWxPaUJ0YVc1cGJYVnRJSGRwWkhSb0tTd2diM0prWlhJZ1puSnZiU0J6YldGc2JDQjBieUJzWVhKblpUcGNiaTh2WEc0dkx5QWdJQ0FvZUhNNklEQXNJSE50T2lBMU56WndlQ3dnYldRNklEYzJPSEI0TENCc1p6b2dPVGt5Y0hnc0lIaHNPaUF4TWpBd2NIZ3BYRzR2TDF4dUx5OGdWR2hsSUcxaGNDQmtaV1pwYm1Wa0lHbHVJSFJvWlNCZ0pHZHlhV1F0WW5KbFlXdHdiMmx1ZEhOZ0lHZHNiMkpoYkNCMllYSnBZV0pzWlNCcGN5QjFjMlZrSUdGeklIUm9aU0JnSkdKeVpXRnJjRzlwYm5SellDQmhjbWQxYldWdWRDQmllU0JrWldaaGRXeDBMbHh1WEc0dkx5Qk9ZVzFsSUc5bUlIUm9aU0J1WlhoMElHSnlaV0ZyY0c5cGJuUXNJRzl5SUc1MWJHd2dabTl5SUhSb1pTQnNZWE4wSUdKeVpXRnJjRzlwYm5RdVhHNHZMMXh1THk4Z0lDQWdQajRnWW5KbFlXdHdiMmx1ZEMxdVpYaDBLSE50S1Z4dUx5OGdJQ0FnYldSY2JpOHZJQ0FnSUQ0K0lHSnlaV0ZyY0c5cGJuUXRibVY0ZENoemJTd2dLSGh6T2lBd0xDQnpiVG9nTlRjMmNIZ3NJRzFrT2lBM05qaHdlQ3dnYkdjNklEazVNbkI0TENCNGJEb2dNVEl3TUhCNEtTbGNiaTh2SUNBZ0lHMWtYRzR2THlBZ0lDQStQaUJpY21WaGEzQnZhVzUwTFc1bGVIUW9jMjBzSUNSaWNtVmhhM0J2YVc1MExXNWhiV1Z6T2lBb2VITWdjMjBnYldRZ2JHY2dlR3dwS1Z4dUx5OGdJQ0FnYldSY2JrQm1kVzVqZEdsdmJpQmljbVZoYTNCdmFXNTBMVzVsZUhRb0pHNWhiV1VzSUNSaWNtVmhhM0J2YVc1MGN6b2dKR2R5YVdRdFluSmxZV3R3YjJsdWRITXNJQ1JpY21WaGEzQnZhVzUwTFc1aGJXVnpPaUJ0WVhBdGEyVjVjeWdrWW5KbFlXdHdiMmx1ZEhNcEtTQjdYRzRnSUNSdU9pQnBibVJsZUNna1luSmxZV3R3YjJsdWRDMXVZVzFsY3l3Z0pHNWhiV1VwTzF4dUlDQkFhV1lnYm05MElDUnVJSHRjYmlBZ0lDQkFaWEp5YjNJZ1hDSmljbVZoYTNCdmFXNTBJR0FqZXlSdVlXMWxmV0FnYm05MElHWnZkVzVrSUdsdUlHQWpleVJpY21WaGEzQnZhVzUwYzMxZ1hDSTdYRzRnSUgxY2JpQWdRSEpsZEhWeWJpQnBaaWdrYmlBOElHeGxibWQwYUNna1luSmxZV3R3YjJsdWRDMXVZVzFsY3lrc0lHNTBhQ2drWW5KbFlXdHdiMmx1ZEMxdVlXMWxjeXdnSkc0Z0t5QXhLU3dnYm5Wc2JDazdYRzU5WEc1Y2JpOHZJRTFwYm1sdGRXMGdZbkpsWVd0d2IybHVkQ0IzYVdSMGFDNGdUblZzYkNCbWIzSWdkR2hsSUhOdFlXeHNaWE4wSUNobWFYSnpkQ2tnWW5KbFlXdHdiMmx1ZEM1Y2JpOHZYRzR2THlBZ0lDQStQaUJpY21WaGEzQnZhVzUwTFcxcGJpaHpiU3dnS0hoek9pQXdMQ0J6YlRvZ05UYzJjSGdzSUcxa09pQTNOamh3ZUN3Z2JHYzZJRGs1TW5CNExDQjRiRG9nTVRJd01IQjRLU2xjYmk4dklDQWdJRFUzTm5CNFhHNUFablZ1WTNScGIyNGdZbkpsWVd0d2IybHVkQzF0YVc0b0pHNWhiV1VzSUNSaWNtVmhhM0J2YVc1MGN6b2dKR2R5YVdRdFluSmxZV3R3YjJsdWRITXBJSHRjYmlBZ0pHMXBiam9nYldGd0xXZGxkQ2drWW5KbFlXdHdiMmx1ZEhNc0lDUnVZVzFsS1R0Y2JpQWdRSEpsZEhWeWJpQnBaaWdrYldsdUlDRTlJREFzSUNSdGFXNHNJRzUxYkd3cE8xeHVmVnh1WEc0dkx5Qk5ZWGhwYlhWdElHSnlaV0ZyY0c5cGJuUWdkMmxrZEdndVhHNHZMeUJVYUdVZ2JXRjRhVzExYlNCMllXeDFaU0JwY3lCeVpXUjFZMlZrSUdKNUlEQXVNREp3ZUNCMGJ5QjNiM0pySUdGeWIzVnVaQ0IwYUdVZ2JHbHRhWFJoZEdsdmJuTWdiMlpjYmk4dklHQnRhVzR0WUNCaGJtUWdZRzFoZUMxZ0lIQnlaV1pwZUdWeklHRnVaQ0IyYVdWM2NHOXlkSE1nZDJsMGFDQm1jbUZqZEdsdmJtRnNJSGRwWkhSb2N5NWNiaTh2SUZObFpTQm9kSFJ3Y3pvdkwzZDNkeTUzTXk1dmNtY3ZWRkl2YldWa2FXRnhkV1Z5YVdWekxUUXZJMjF4TFcxcGJpMXRZWGhjYmk4dklGVnpaWE1nTUM0d01uQjRJSEpoZEdobGNpQjBhR0Z1SURBdU1ERndlQ0IwYnlCM2IzSnJJR0Z5YjNWdVpDQmhJR04xY25KbGJuUWdjbTkxYm1ScGJtY2dZblZuSUdsdUlGTmhabUZ5YVM1Y2JpOHZJRk5sWlNCb2RIUndjem92TDJKMVozTXVkMlZpYTJsMExtOXlaeTl6YUc5M1gySjFaeTVqWjJrL2FXUTlNVGM0TWpZeFhHNHZMMXh1THk4Z0lDQWdQajRnWW5KbFlXdHdiMmx1ZEMxdFlYZ29iV1FzSUNoNGN6b2dNQ3dnYzIwNklEVTNObkI0TENCdFpEb2dOelk0Y0hnc0lHeG5PaUE1T1RKd2VDd2dlR3c2SURFeU1EQndlQ2twWEc0dkx5QWdJQ0EzTmpjdU9UaHdlRnh1UUdaMWJtTjBhVzl1SUdKeVpXRnJjRzlwYm5RdGJXRjRLQ1J1WVcxbExDQWtZbkpsWVd0d2IybHVkSE02SUNSbmNtbGtMV0p5WldGcmNHOXBiblJ6S1NCN1hHNGdJQ1J0WVhnNklHMWhjQzFuWlhRb0pHSnlaV0ZyY0c5cGJuUnpMQ0FrYm1GdFpTazdYRzRnSUVCeVpYUjFjbTRnYVdZb0pHMWhlQ0JoYm1RZ0pHMWhlQ0ErSURBc0lDUnRZWGdnTFNBdU1ESXNJRzUxYkd3cE8xeHVmVnh1WEc0dkx5QlNaWFIxY201eklHRWdZbXhoYm1zZ2MzUnlhVzVuSUdsbUlITnRZV3hzWlhOMElHSnlaV0ZyY0c5cGJuUXNJRzkwYUdWeWQybHpaU0J5WlhSMWNtNXpJSFJvWlNCdVlXMWxJSGRwZEdnZ1lTQmtZWE5vSUdsdUlHWnliMjUwTGx4dUx5OGdWWE5sWm5Wc0lHWnZjaUJ0WVd0cGJtY2djbVZ6Y0c5dWMybDJaU0IxZEdsc2FYUnBaWE11WEc0dkwxeHVMeThnSUNBZ1BqNGdZbkpsWVd0d2IybHVkQzFwYm1acGVDaDRjeXdnS0hoek9pQXdMQ0J6YlRvZ05UYzJjSGdzSUcxa09pQTNOamh3ZUN3Z2JHYzZJRGs1TW5CNExDQjRiRG9nTVRJd01IQjRLU2xjYmk4dklDQWdJRndpWENJZ0lDaFNaWFIxY201eklHRWdZbXhoYm1zZ2MzUnlhVzVuS1Z4dUx5OGdJQ0FnUGo0Z1luSmxZV3R3YjJsdWRDMXBibVpwZUNoemJTd2dLSGh6T2lBd0xDQnpiVG9nTlRjMmNIZ3NJRzFrT2lBM05qaHdlQ3dnYkdjNklEazVNbkI0TENCNGJEb2dNVEl3TUhCNEtTbGNiaTh2SUNBZ0lGd2lMWE50WENKY2JrQm1kVzVqZEdsdmJpQmljbVZoYTNCdmFXNTBMV2x1Wm1sNEtDUnVZVzFsTENBa1luSmxZV3R3YjJsdWRITTZJQ1JuY21sa0xXSnlaV0ZyY0c5cGJuUnpLU0I3WEc0Z0lFQnlaWFIxY200Z2FXWW9ZbkpsWVd0d2IybHVkQzF0YVc0b0pHNWhiV1VzSUNSaWNtVmhhM0J2YVc1MGN5a2dQVDBnYm5Wc2JDd2dYQ0pjSWl3Z1hDSXRJM3NrYm1GdFpYMWNJaWs3WEc1OVhHNWNiaTh2SUUxbFpHbGhJRzltSUdGMElHeGxZWE4wSUhSb1pTQnRhVzVwYlhWdElHSnlaV0ZyY0c5cGJuUWdkMmxrZEdndUlFNXZJSEYxWlhKNUlHWnZjaUIwYUdVZ2MyMWhiR3hsYzNRZ1luSmxZV3R3YjJsdWRDNWNiaTh2SUUxaGEyVnpJSFJvWlNCQVkyOXVkR1Z1ZENCaGNIQnNlU0IwYnlCMGFHVWdaMmwyWlc0Z1luSmxZV3R3YjJsdWRDQmhibVFnZDJsa1pYSXVYRzVBYldsNGFXNGdiV1ZrYVdFdFluSmxZV3R3YjJsdWRDMTFjQ2drYm1GdFpTd2dKR0p5WldGcmNHOXBiblJ6T2lBa1ozSnBaQzFpY21WaGEzQnZhVzUwY3lrZ2UxeHVJQ0FrYldsdU9pQmljbVZoYTNCdmFXNTBMVzFwYmlna2JtRnRaU3dnSkdKeVpXRnJjRzlwYm5SektUdGNiaUFnUUdsbUlDUnRhVzRnZTF4dUlDQWdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUFrYldsdUtTQjdYRzRnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNCOVhHNGdJSDBnUUdWc2MyVWdlMXh1SUNBZ0lFQmpiMjUwWlc1ME8xeHVJQ0I5WEc1OVhHNWNiaTh2SUUxbFpHbGhJRzltSUdGMElHMXZjM1FnZEdobElHMWhlR2x0ZFcwZ1luSmxZV3R3YjJsdWRDQjNhV1IwYUM0Z1RtOGdjWFZsY25rZ1ptOXlJSFJvWlNCc1lYSm5aWE4wSUdKeVpXRnJjRzlwYm5RdVhHNHZMeUJOWVd0bGN5QjBhR1VnUUdOdmJuUmxiblFnWVhCd2JIa2dkRzhnZEdobElHZHBkbVZ1SUdKeVpXRnJjRzlwYm5RZ1lXNWtJRzVoY25KdmQyVnlMbHh1UUcxcGVHbHVJRzFsWkdsaExXSnlaV0ZyY0c5cGJuUXRaRzkzYmlna2JtRnRaU3dnSkdKeVpXRnJjRzlwYm5Sek9pQWtaM0pwWkMxaWNtVmhhM0J2YVc1MGN5a2dlMXh1SUNBa2JXRjRPaUJpY21WaGEzQnZhVzUwTFcxaGVDZ2tibUZ0WlN3Z0pHSnlaV0ZyY0c5cGJuUnpLVHRjYmlBZ1FHbG1JQ1J0WVhnZ2UxeHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXRjRLU0I3WEc0Z0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQjlYRzRnSUgwZ1FHVnNjMlVnZTF4dUlDQWdJRUJqYjI1MFpXNTBPMXh1SUNCOVhHNTlYRzVjYmk4dklFMWxaR2xoSUhSb1lYUWdjM0JoYm5NZ2JYVnNkR2x3YkdVZ1luSmxZV3R3YjJsdWRDQjNhV1IwYUhNdVhHNHZMeUJOWVd0bGN5QjBhR1VnUUdOdmJuUmxiblFnWVhCd2JIa2dZbVYwZDJWbGJpQjBhR1VnYldsdUlHRnVaQ0J0WVhnZ1luSmxZV3R3YjJsdWRITmNia0J0YVhocGJpQnRaV1JwWVMxaWNtVmhhM0J2YVc1MExXSmxkSGRsWlc0b0pHeHZkMlZ5TENBa2RYQndaWElzSUNSaWNtVmhhM0J2YVc1MGN6b2dKR2R5YVdRdFluSmxZV3R3YjJsdWRITXBJSHRjYmlBZ0pHMXBiam9nWW5KbFlXdHdiMmx1ZEMxdGFXNG9KR3h2ZDJWeUxDQWtZbkpsWVd0d2IybHVkSE1wTzF4dUlDQWtiV0Y0T2lCaWNtVmhhM0J2YVc1MExXMWhlQ2drZFhCd1pYSXNJQ1JpY21WaGEzQnZhVzUwY3lrN1hHNWNiaUFnUUdsbUlDUnRhVzRnSVQwZ2JuVnNiQ0JoYm1RZ0pHMWhlQ0FoUFNCdWRXeHNJSHRjYmlBZ0lDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dKRzFwYmlrZ1lXNWtJQ2h0WVhndGQybGtkR2c2SUNSdFlYZ3BJSHRjYmlBZ0lDQWdJRUJqYjI1MFpXNTBPMXh1SUNBZ0lIMWNiaUFnZlNCQVpXeHpaU0JwWmlBa2JXRjRJRDA5SUc1MWJHd2dlMXh1SUNBZ0lFQnBibU5zZFdSbElHMWxaR2xoTFdKeVpXRnJjRzlwYm5RdGRYQW9KR3h2ZDJWeUxDQWtZbkpsWVd0d2IybHVkSE1wSUh0Y2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4dUlDQWdJSDFjYmlBZ2ZTQkFaV3h6WlNCcFppQWtiV2x1SUQwOUlHNTFiR3dnZTF4dUlDQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaExXSnlaV0ZyY0c5cGJuUXRaRzkzYmlna2RYQndaWElzSUNSaWNtVmhhM0J2YVc1MGN5a2dlMXh1SUNBZ0lDQWdRR052Ym5SbGJuUTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTh2SUUxbFpHbGhJR0psZEhkbFpXNGdkR2hsSUdKeVpXRnJjRzlwYm5RbmN5QnRhVzVwYlhWdElHRnVaQ0J0WVhocGJYVnRJSGRwWkhSb2N5NWNiaTh2SUU1dklHMXBibWx0ZFcwZ1ptOXlJSFJvWlNCemJXRnNiR1Z6ZENCaWNtVmhhM0J2YVc1MExDQmhibVFnYm04Z2JXRjRhVzExYlNCbWIzSWdkR2hsSUd4aGNtZGxjM1FnYjI1bExseHVMeThnVFdGclpYTWdkR2hsSUVCamIyNTBaVzUwSUdGd2NHeDVJRzl1YkhrZ2RHOGdkR2hsSUdkcGRtVnVJR0p5WldGcmNHOXBiblFzSUc1dmRDQjJhV1YzY0c5eWRITWdZVzU1SUhkcFpHVnlJRzl5SUc1aGNuSnZkMlZ5TGx4dVFHMXBlR2x1SUcxbFpHbGhMV0p5WldGcmNHOXBiblF0YjI1c2VTZ2tibUZ0WlN3Z0pHSnlaV0ZyY0c5cGJuUnpPaUFrWjNKcFpDMWljbVZoYTNCdmFXNTBjeWtnZTF4dUlDQWtiV2x1T2lBZ1luSmxZV3R3YjJsdWRDMXRhVzRvSkc1aGJXVXNJQ1JpY21WaGEzQnZhVzUwY3lrN1hHNGdJQ1J1WlhoME9pQmljbVZoYTNCdmFXNTBMVzVsZUhRb0pHNWhiV1VzSUNSaWNtVmhhM0J2YVc1MGN5azdYRzRnSUNSdFlYZzZJQ0JpY21WaGEzQnZhVzUwTFcxaGVDZ2tibVY0ZENrN1hHNWNiaUFnUUdsbUlDUnRhVzRnSVQwZ2JuVnNiQ0JoYm1RZ0pHMWhlQ0FoUFNCdWRXeHNJSHRjYmlBZ0lDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dKRzFwYmlrZ1lXNWtJQ2h0WVhndGQybGtkR2c2SUNSdFlYZ3BJSHRjYmlBZ0lDQWdJRUJqYjI1MFpXNTBPMXh1SUNBZ0lIMWNiaUFnZlNCQVpXeHpaU0JwWmlBa2JXRjRJRDA5SUc1MWJHd2dlMXh1SUNBZ0lFQnBibU5zZFdSbElHMWxaR2xoTFdKeVpXRnJjRzlwYm5RdGRYQW9KRzVoYldVc0lDUmljbVZoYTNCdmFXNTBjeWtnZTF4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEc0Z0lDQWdmVnh1SUNCOUlFQmxiSE5sSUdsbUlDUnRhVzRnUFQwZ2JuVnNiQ0I3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiV1ZrYVdFdFluSmxZV3R3YjJsdWRDMWtiM2R1S0NSdVpYaDBMQ0FrWW5KbFlXdHdiMmx1ZEhNcElIdGNiaUFnSUNBZ0lFQmpiMjUwWlc1ME8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lKR2R5YVdRdFozVjBkR1Z5TFhkcFpIUm9PaUF6TUhCNE8xeHlYRzVjY2x4dUpHZHlhV1F0WW5KbFlXdHdiMmx1ZEhNNklDaGNjbHh1SUNBZ0lDQWdJQ0I0Y3pvZ01DeGNjbHh1SUNBZ0lDQWdJQ0J6YlRvZ05UYzJjSGdzWEhKY2JpQWdJQ0FnSUNBZ2JXUTZJRGMyT0hCNExGeHlYRzRnSUNBZ0lDQWdJR3huT2lBNU9USndlQ3hjY2x4dUlDQWdJQ0FnSUNCNGJEb2dNVEl3TUhCNExGeHlYRzRnSUNBZ0lDQWdJSGg0YkRvZ01UUXdNSEI0WEhKY2JpazdYSEpjYmx4eVhHNGtZMjl1ZEdGcGJtVnlMVzFoZUMxM2FXUjBhSE02SUNoY2NseHVJQ0FnSUNBZ0lDQnpiVG9nTlRRd2NIZ3NYSEpjYmlBZ0lDQWdJQ0FnYldRNklEY3lNSEI0TEZ4eVhHNGdJQ0FnSUNBZ0lHeG5PaUE1TmpCd2VDeGNjbHh1SUNBZ0lDQWdJQ0I0YkRvZ01URTBNSEI0TEZ4eVhHNGdJQ0FnSUNBZ0lIaDRiRG9nTVRNeU1IQjRYSEpjYmlrN1hISmNibHh5WEc1QWFXMXdiM0owSUZ3aVpuVnVZM1JwYjI1elhDSTdYSEpjYmtCcGJYQnZjblFnWENKMllYSnBZV0pzWlhOY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSW0xcGVHbHVjeTlpY21WaGEzQnZhVzUwYzF3aU8xeHlYRzVBYVcxd2IzSjBJRndpYldsNGFXNXpMMk52Ym5SaGFXNWxjbHdpTzF4eVhHNUFhVzF3YjNKMElGd2liV2w0YVc1ekwyZHlhV1JjSWp0Y2NseHVYSEpjYmtCdGFYaHBiaUJ0WVd0bExXMWhlQzEzYVdSMGFDMWpiMjUwWVdsdVpYSW9KRzFoZUMxM2FXUjBhSE02SUNSamIyNTBZV2x1WlhJdGJXRjRMWGRwWkhSb2N5d2dKR0p5WldGcmNHOXBiblJ6T2lBa1ozSnBaQzFpY21WaGEzQnZhVzUwY3lrZ2UxeHlYRzRnSUVCbFlXTm9JQ1JpY21WaGEzQnZhVzUwTENBa2JXRjRMWGRwWkhSb0lHbHVJQ1J0WVhndGQybGtkR2h6SUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUcxbFpHbGhMV0p5WldGcmNHOXBiblF0ZFhBb0pHSnlaV0ZyY0c5cGJuUXNJQ1JpY21WaGEzQnZhVzUwY3lrZ2UxeHlYRzRnSUNBZ0lDQnRZWGd0ZDJsa2RHZzZJQ1J0WVhndGQybGtkR2c3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1OUlpd2lMeThnUjNKcFpDQnplWE4wWlcxY2JpOHZYRzR2THlCSFpXNWxjbUYwWlNCelpXMWhiblJwWXlCbmNtbGtJR052YkhWdGJuTWdkMmwwYUNCMGFHVnpaU0J0YVhocGJuTXVYRzVjYmtCdGFYaHBiaUJ0WVd0bExYSnZkeWdrWjNWMGRHVnlPaUFrWjNKcFpDMW5kWFIwWlhJdGQybGtkR2dwSUh0Y2JpQWdMUzBqZXlSMllYSnBZV0pzWlMxd2NtVm1hWGg5WjNWMGRHVnlMWGc2SUNON0pHZDFkSFJsY24wN1hHNGdJQzB0STNza2RtRnlhV0ZpYkdVdGNISmxabWw0ZldkMWRIUmxjaTE1T2lBd08xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExYZHlZWEE2SUhkeVlYQTdYRzRnSUM4dklGUlBSRTg2SUZKbGRtbHphWFFnWTJGc1l5QnZjbVJsY2lCaFpuUmxjaUJvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2Y21WaFkzUXRZbTl2ZEhOMGNtRndMM0psWVdOMExXSnZiM1J6ZEhKaGNDOXBjM04xWlhNdk5qQXpPU0JwY3lCbWFYaGxaRnh1SUNCdFlYSm5hVzR0ZEc5d09pQmpZV3hqS0MweElDb2dkbUZ5S0MwdEkzc2tkbUZ5YVdGaWJHVXRjSEpsWm1sNGZXZDFkSFJsY2kxNUtTazdJQzh2SUhOMGVXeGxiR2x1ZEMxa2FYTmhZbXhsTFd4cGJtVWdablZ1WTNScGIyNHRaR2x6WVd4c2IzZGxaQzFzYVhOMFhHNGdJRzFoY21kcGJpMXlhV2RvZERvZ1kyRnNZeWd0TGpVZ0tpQjJZWElvTFMwamV5UjJZWEpwWVdKc1pTMXdjbVZtYVhoOVozVjBkR1Z5TFhncEtUc2dMeThnYzNSNWJHVnNhVzUwTFdScGMyRmliR1V0YkdsdVpTQm1kVzVqZEdsdmJpMWthWE5oYkd4dmQyVmtMV3hwYzNSY2JpQWdiV0Z5WjJsdUxXeGxablE2SUdOaGJHTW9MUzQxSUNvZ2RtRnlLQzB0STNza2RtRnlhV0ZpYkdVdGNISmxabWw0ZldkMWRIUmxjaTE0S1NrN0lDOHZJSE4wZVd4bGJHbHVkQzFrYVhOaFlteGxMV3hwYm1VZ1puVnVZM1JwYjI0dFpHbHpZV3hzYjNkbFpDMXNhWE4wWEc1OVhHNWNia0J0YVhocGJpQnRZV3RsTFdOdmJDMXlaV0ZrZVNna1ozVjBkR1Z5T2lBa1ozSnBaQzFuZFhSMFpYSXRkMmxrZEdncElIdGNiaUFnTHk4Z1FXUmtJR0p2ZUNCemFYcHBibWNnYVdZZ2IyNXNlU0IwYUdVZ1ozSnBaQ0JwY3lCc2IyRmtaV1JjYmlBZ1ltOTRMWE5wZW1sdVp6b2dhV1lvZG1GeWFXRmliR1V0WlhocGMzUnpLR2x1WTJ4MVpHVXRZMjlzZFcxdUxXSnZlQzF6YVhwcGJtY3BJR0Z1WkNBa2FXNWpiSFZrWlMxamIyeDFiVzR0WW05NExYTnBlbWx1Wnl3Z1ltOXlaR1Z5TFdKdmVDd2diblZzYkNrN1hHNGdJQzh2SUZCeVpYWmxiblFnWTI5c2RXMXVjeUJtY205dElHSmxZMjl0YVc1bklIUnZieUJ1WVhKeWIzY2dkMmhsYmlCaGRDQnpiV0ZzYkdWeUlHZHlhV1FnZEdsbGNuTWdZbmxjYmlBZ0x5OGdZV3gzWVhseklITmxkSFJwYm1jZ1lIZHBaSFJvT2lBeE1EQWxPMkF1SUZSb2FYTWdkMjl5YTNNZ1ltVmpZWFZ6WlNCM1pTQnpaWFFnZEdobElIZHBaSFJvWEc0Z0lDOHZJR3hoZEdWeUlHOXVJSFJ2SUc5MlpYSnlhV1JsSUhSb2FYTWdhVzVwZEdsaGJDQjNhV1IwYUM1Y2JpQWdabXhsZUMxemFISnBibXM2SURBN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN0lDOHZJRkJ5WlhabGJuUWdZQzVqYjJ3dFlYVjBiMkFzSUdBdVkyOXNZQ0FvSmlCeVpYTndiMjV6YVhabElIWmhjbWxoYm5SektTQm1jbTl0SUdKeVpXRnJhVzVuSUc5MWRDQjBhR1VnWjNKcFpGeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQmpZV3hqS0haaGNpZ3RMU043SkhaaGNtbGhZbXhsTFhCeVpXWnBlSDFuZFhSMFpYSXRlQ2tnS2lBdU5TazdJQzh2SUhOMGVXeGxiR2x1ZEMxa2FYTmhZbXhsTFd4cGJtVWdablZ1WTNScGIyNHRaR2x6WVd4c2IzZGxaQzFzYVhOMFhHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ1kyRnNZeWgyWVhJb0xTMGpleVIyWVhKcFlXSnNaUzF3Y21WbWFYaDlaM1YwZEdWeUxYZ3BJQ29nTGpVcE95QXZMeUJ6ZEhsc1pXeHBiblF0WkdsellXSnNaUzFzYVc1bElHWjFibU4wYVc5dUxXUnBjMkZzYkc5M1pXUXRiR2x6ZEZ4dUlDQnRZWEpuYVc0dGRHOXdPaUIyWVhJb0xTMGpleVIyWVhKcFlXSnNaUzF3Y21WbWFYaDlaM1YwZEdWeUxYa3BPMXh1ZlZ4dVhHNUFiV2w0YVc0Z2JXRnJaUzFqYjJ3b0pITnBlbVU2SUdaaGJITmxMQ0FrWTI5c2RXMXVjem9nSkdkeWFXUXRZMjlzZFcxdWN5a2dlMXh1SUNCQWFXWWdKSE5wZW1VZ2UxeHVJQ0FnSUdac1pYZzZJREFnTUNCaGRYUnZPMXh1SUNBZ0lIZHBaSFJvT2lCd1pYSmpaVzUwWVdkbEtHUnBkbWxrWlNna2MybDZaU3dnSkdOdmJIVnRibk1wS1R0Y2JseHVJQ0I5SUVCbGJITmxJSHRjYmlBZ0lDQm1iR1Y0T2lBeElERWdNRHRjYmlBZ0lDQnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hHNGdJSDFjYm4xY2JseHVRRzFwZUdsdUlHMWhhMlV0WTI5c0xXRjFkRzhvS1NCN1hHNGdJR1pzWlhnNklEQWdNQ0JoZFhSdk8xeHVJQ0IzYVdSMGFEb2dZWFYwYnp0Y2JuMWNibHh1UUcxcGVHbHVJRzFoYTJVdFkyOXNMVzltWm5ObGRDZ2tjMmw2WlN3Z0pHTnZiSFZ0Ym5NNklDUm5jbWxrTFdOdmJIVnRibk1wSUh0Y2JpQWdKRzUxYlRvZ1pHbDJhV1JsS0NSemFYcGxMQ0FrWTI5c2RXMXVjeWs3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUJwWmlna2JuVnRJRDA5SURBc0lEQXNJSEJsY21ObGJuUmhaMlVvSkc1MWJTa3BPMXh1ZlZ4dVhHNHZMeUJTYjNjZ1kyOXNkVzF1YzF4dUx5OWNiaTh2SUZOd1pXTnBabmtnYjI0Z1lTQndZWEpsYm5RZ1pXeGxiV1Z1ZENobExtY3VMQ0F1Y205M0tTQjBieUJtYjNKalpTQnBiVzFsWkdsaGRHVWdZMmhwYkdSeVpXNGdhVzUwYnlCT1RseHVMeThnYm5WdFltVnliMllnWTI5c2RXMXVjeTRnVTNWd2NHOXlkSE1nZDNKaGNIQnBibWNnZEc4Z2JtVjNJR3hwYm1WekxDQmlkWFFnWkc5bGN5QnViM1FnWkc4Z1lTQk5ZWE52Ym5KNVhHNHZMeUJ6ZEhsc1pTQm5jbWxrTGx4dVFHMXBlR2x1SUhKdmR5MWpiMnh6S0NSamIzVnVkQ2tnZTF4dUlDQStJQ29nZTF4dUlDQWdJR1pzWlhnNklEQWdNQ0JoZFhSdk8xeHVJQ0FnSUhkcFpIUm9PaUJrYVhacFpHVW9NVEF3SlN3Z0pHTnZkVzUwS1R0Y2JpQWdmVnh1ZlZ4dVhHNHZMeUJHY21GdFpYZHZjbXNnWjNKcFpDQm5aVzVsY21GMGFXOXVYRzR2TDF4dUx5OGdWWE5sWkNCdmJteDVJR0o1SUVKdmIzUnpkSEpoY0NCMGJ5Qm5aVzVsY21GMFpTQjBhR1VnWTI5eWNtVmpkQ0J1ZFcxaVpYSWdiMllnWjNKcFpDQmpiR0Z6YzJWeklHZHBkbVZ1WEc0dkx5QmhibmtnZG1Gc2RXVWdiMllnWUNSbmNtbGtMV052YkhWdGJuTmdMbHh1WEc1QWJXbDRhVzRnYldGclpTMW5jbWxrTFdOdmJIVnRibk1vSkdOdmJIVnRibk02SUNSbmNtbGtMV052YkhWdGJuTXNJQ1JuZFhSMFpYSTZJQ1JuY21sa0xXZDFkSFJsY2kxM2FXUjBhQ3dnSkdKeVpXRnJjRzlwYm5Sek9pQWtaM0pwWkMxaWNtVmhhM0J2YVc1MGN5a2dlMXh1SUNCQVpXRmphQ0FrWW5KbFlXdHdiMmx1ZENCcGJpQnRZWEF0YTJWNWN5Z2tZbkpsWVd0d2IybHVkSE1wSUh0Y2JpQWdJQ0FrYVc1bWFYZzZJR0p5WldGcmNHOXBiblF0YVc1bWFYZ29KR0p5WldGcmNHOXBiblFzSUNSaWNtVmhhM0J2YVc1MGN5azdYRzVjYmlBZ0lDQkFhVzVqYkhWa1pTQnRaV1JwWVMxaWNtVmhhM0J2YVc1MExYVndLQ1JpY21WaGEzQnZhVzUwTENBa1luSmxZV3R3YjJsdWRITXBJSHRjYmlBZ0lDQWdJQzh2SUZCeWIzWnBaR1VnWW1GemFXTWdZQzVqYjJ3dGUySndmV0FnWTJ4aGMzTmxjeUJtYjNJZ1pYRjFZV3d0ZDJsa2RHZ2dabXhsZUdKdmVDQmpiMngxYlc1elhHNGdJQ0FnSUNBdVkyOXNJM3NrYVc1bWFYaDlJSHRjYmlBZ0lDQWdJQ0FnWm14bGVEb2dNU0F3SURBbE95QXZMeUJHYkdWNFluVm5jeUFqTkRvZ2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzQm9hV3hwY0hkaGJIUnZiaTltYkdWNFluVm5jeU5tYkdWNFluVm5MVFJjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTG5KdmR5MWpiMnh6STNza2FXNW1hWGg5TFdGMWRHOGdQaUFxSUh0Y2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JXRnJaUzFqYjJ3dFlYVjBieWdwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQWFXWWdKR2R5YVdRdGNtOTNMV052YkhWdGJuTWdQaUF3SUh0Y2JpQWdJQ0FnSUNBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0FrWjNKcFpDMXliM2N0WTI5c2RXMXVjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0xuSnZkeTFqYjJ4ekkzc2thVzVtYVhoOUxTTjdKR2w5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSEp2ZHkxamIyeHpLQ1JwS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTG1OdmJDTjdKR2x1Wm1sNGZTMWhkWFJ2SUh0Y2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JXRnJaUzFqYjJ3dFlYVjBieWdwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQWFXWWdKR052YkhWdGJuTWdQaUF3SUh0Y2JpQWdJQ0FnSUNBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0FrWTI5c2RXMXVjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0xtTnZiQ043SkdsdVptbDRmUzBqZXlScGZTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdFlXdGxMV052YkNna2FTd2dKR052YkhWdGJuTXBPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQzh2SUdBa1kyOXNkVzF1Y3lBdElERmdJR0psWTJGMWMyVWdiMlptYzJWMGRHbHVaeUJpZVNCMGFHVWdkMmxrZEdnZ2IyWWdZVzRnWlc1MGFYSmxJSEp2ZHlCcGMyNG5kQ0J3YjNOemFXSnNaVnh1SUNBZ0lDQWdJQ0JBWm05eUlDUnBJR1p5YjIwZ01DQjBhSEp2ZFdkb0lDZ2tZMjlzZFcxdWN5QXRJREVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQkFhV1lnYm05MElDZ2thVzVtYVhnZ1BUMGdYQ0pjSWlCaGJtUWdKR2tnUFQwZ01Da2dleUF2THlCQmRtOXBaQ0JsYldsMGRHbHVaeUIxYzJWc1pYTnpJQzV2Wm1aelpYUXRNRnh1SUNBZ0lDQWdJQ0FnSUNBZ0xtOW1abk5sZENON0pHbHVabWw0ZlMwamV5UnBmU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzFoYTJVdFkyOXNMVzltWm5ObGRDZ2thU3dnSkdOdmJIVnRibk1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQXZMeUJIZFhSMFpYSnpYRzRnSUNBZ0lDQXZMMXh1SUNBZ0lDQWdMeThnVFdGclpTQjFjMlVnYjJZZ1lDNW5MU3BnTENCZ0xtZDRMU3BnSUc5eUlHQXVaM2t0S21BZ2RYUnBiR2wwYVdWeklIUnZJR05vWVc1blpTQnpjR0ZqYVc1bklHSmxkSGRsWlc0Z2RHaGxJR052YkhWdGJuTXVYRzRnSUNBZ0lDQkFaV0ZqYUNBa2EyVjVMQ0FrZG1Gc2RXVWdhVzRnSkdkMWRIUmxjbk1nZTF4dUlDQWdJQ0FnSUNBdVp5TjdKR2x1Wm1sNGZTMGpleVJyWlhsOUxGeHVJQ0FnSUNBZ0lDQXVaM2dqZXlScGJtWnBlSDB0STNza2EyVjVmU0I3WEc0Z0lDQWdJQ0FnSUNBZ0xTMGpleVIyWVhKcFlXSnNaUzF3Y21WbWFYaDlaM1YwZEdWeUxYZzZJQ043SkhaaGJIVmxmVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDNW5JM3NrYVc1bWFYaDlMU043Skd0bGVYMHNYRzRnSUNBZ0lDQWdJQzVuZVNON0pHbHVabWw0ZlMwamV5UnJaWGw5SUh0Y2JpQWdJQ0FnSUNBZ0lDQXRMU043SkhaaGNtbGhZbXhsTFhCeVpXWnBlSDFuZFhSMFpYSXRlVG9nSTNza2RtRnNkV1Y5TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JrQnRhWGhwYmlCdFlXdGxMV056YzJkeWFXUW9KR052YkhWdGJuTTZJQ1JuY21sa0xXTnZiSFZ0Ym5Nc0lDUmljbVZoYTNCdmFXNTBjem9nSkdkeWFXUXRZbkpsWVd0d2IybHVkSE1wSUh0Y2JpQWdRR1ZoWTJnZ0pHSnlaV0ZyY0c5cGJuUWdhVzRnYldGd0xXdGxlWE1vSkdKeVpXRnJjRzlwYm5SektTQjdYRzRnSUNBZ0pHbHVabWw0T2lCaWNtVmhhM0J2YVc1MExXbHVabWw0S0NSaWNtVmhhM0J2YVc1MExDQWtZbkpsWVd0d2IybHVkSE1wTzF4dVhHNGdJQ0FnUUdsdVkyeDFaR1VnYldWa2FXRXRZbkpsWVd0d2IybHVkQzExY0Nna1luSmxZV3R3YjJsdWRDd2dKR0p5WldGcmNHOXBiblJ6S1NCN1hHNGdJQ0FnSUNCQWFXWWdKR052YkhWdGJuTWdQaUF3SUh0Y2JpQWdJQ0FnSUNBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0FrWTI5c2RXMXVjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0xtY3RZMjlzSTNza2FXNW1hWGg5TFNON0pHbDlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0WTI5c2RXMXVPaUJoZFhSdklDOGdjM0JoYmlBa2FUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQXZMeUJUZEdGeWRDQjNhWFJvSUdBeFlDQmlaV05oZFhObElHQXdZQ0JwY3lCaGJtUWdhVzUyWVd4cFpDQjJZV3gxWlM1Y2JpQWdJQ0FnSUNBZ0x5OGdSVzVrY3lCM2FYUm9JR0FrWTI5c2RXMXVjeUF0SURGZ0lHSmxZMkYxYzJVZ2IyWm1jMlYwZEdsdVp5QmllU0IwYUdVZ2QybGtkR2dnYjJZZ1lXNGdaVzUwYVhKbElISnZkeUJwYzI0bmRDQndiM056YVdKc1pTNWNiaUFnSUNBZ0lDQWdRR1p2Y2lBa2FTQm1jbTl0SURFZ2RHaHliM1ZuYUNBb0pHTnZiSFZ0Ym5NZ0xTQXhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0xtY3RjM1JoY25RamV5UnBibVpwZUgwdEkzc2thWDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaM0pwWkMxamIyeDFiVzR0YzNSaGNuUTZJQ1JwTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpTG5Oc2FXTnJMWE5zYVdSbGNpQjdYSEpjYmlBZ2JXbHVMWGRwWkhSb09pQXdPMXh5WEc1OVhISmNiaTV6YkdsamF5MXNhWE4wSUh0Y2NseHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh5WEc1OVhISmNibHh5WEc0dkx5RFFsTkM3MFk4ZzBMTFF0ZEdBMFlMUXVOQzYwTERRdTlHTTBMM1F2dEN6MEw0ZzBZSFF1OUN3MExuUXROQzEwWURRc0NEUXZkQ3cwTFRRdmlCa2FYTndiR0Y1T2lCaWJHOWphMXh5WEc0dWMyeHBZMnN0ZEhKaFkyc2dlMXh5WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JuMGlMQ0l1Y3kxdFlXbHVJSHRjY2x4dUlDQnRhVzR0YUdWcFoyaDBPaUF4TURCMmFEdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNjbHh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHlYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2p0Y2NseHVJQ0FtT2pwaFpuUmxjaUI3WEhKY2JpQWdJQ0JqYjI1MFpXNTBPaUFuSnp0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUhCdmMybDBhVzl1S0dGaWMyOXNkWFJsTENBa2RHOXdPaUF3TENBa2NtbG5hSFE2SURBc0lDUmliM1IwYjIwNklEQXNJQ1JzWldaME9pQXdLVHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVE2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFZ5YkNoY0lpNHVMMmx0Wnk5elpXTjBhVzl1TFcxaGFXNHZjMlZqZEdsdmJsOHhMWE4yWjE4eExuTjJaMXdpS1NBNU1DVWdMVEV3SlNCdWJ5MXlaWEJsWVhRc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhWeWJDaGNJaTR1TDJsdFp5OXpaV04wYVc5dUxXMWhhVzR2YzJWamRHbHZibDh4TFhOMloxOHlMbk4yWjF3aUtTQXROU1VnTkRBbElHNXZMWEpsY0dWaGRDeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RYSnNLRndpTGk0dmFXMW5MM05sWTNScGIyNHRiV0ZwYmk5elpXTjBhVzl1WHpFdGMzWm5Yek11YzNablhDSXBJREV3TlNVZ09UQWxJRzV2TFhKbGNHVmhkQ3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbWRpWVNnak1EQXdMQ0F3TGpNcE8xeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRJRFF3Y0hnc0lESXdKU3dnTXpBbE8xeHlYRzRnSUgxY2NseHVmU0lzSWtCdGFYaHBiaUJ6YVhwbEtDUmhMQ0FrWWpvZ1ptRnNjMlVwSUh0Y2NseHVJQ0IzYVdSMGFEb2dKR0U3WEhKY2JpQWdRR2xtSUNSaUlIdGNjbHh1SUNBZ0lHaGxhV2RvZERvZ0pHSTdYSEpjYmlBZ2ZTQkFaV3h6WlNCN1hISmNiaUFnSUNCb1pXbG5hSFE2SUNSaE8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlISmxiU2drYzJsNlpTa2dlMXh5WEc0Z0lHWnZiblF0YzJsNlpUb2dJM3NrYzJsNlpTOHhObjF5WlcwN1hISmNibjFjY2x4dVhISmNia0J0YVhocGJpQmhZbk52YkhWMFpTMWpaVzUwWlhJb0tTQjdYSEpjYmlBZ2RHOXdPaUExTUNVN1hISmNiaUFnYkdWbWREb2dOVEFsTzF4eVhHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcE8xeHlYRzU5WEhKY2JseHlYRzVBYldsNGFXNGdZV0p6YjJ4MWRHVXRlQ2dwSUh0Y2NseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdiR1ZtZERvZ05UQWxPMXh5WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TlRBbEtUdGNjbHh1ZlZ4eVhHNWNjbHh1UUcxcGVHbHVJR0ZpYzI5c2RYUmxMWGtvS1NCN1hISmNiaUFnZEc5d09pQTFNQ1U3WEhKY2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPMXh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnWVdKemIyeDFkR1V0WVd4c0tDUnVkVzA2SURBcElIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnZEc5d09pQWtiblZ0TzF4eVhHNGdJR0p2ZEhSdmJUb2dKRzUxYlR0Y2NseHVJQ0JzWldaME9pQWtiblZ0TzF4eVhHNGdJSEpwWjJoME9pQWtiblZ0TzF4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z2NHOXphWFJwYjI0b0pIQnZjMmwwYVc5dUxDQWtkRzl3T2lCdWRXeHNMQ0FrWW05MGRHOXRPaUJ1ZFd4c0xDQWtiR1ZtZERvZ2JuVnNiQ3dnSkhKcFoyaDBPaUJ1ZFd4c0tTQjdYSEpjYmlBZ2NHOXphWFJwYjI0NklDUndiM05wZEdsdmJqdGNjbHh1SUNCMGIzQTZJQ1IwYjNBN1hISmNiaUFnY21sbmFIUTZJQ1J5YVdkb2REdGNjbHh1SUNCaWIzUjBiMjA2SUNSaWIzUjBiMjA3WEhKY2JpQWdiR1ZtZERvZ0pHeGxablE3WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCd2JHRmpaV2h2YkdSbGNpQjdYSEpjYmlBZ09qb3RkMlZpYTJsMExXbHVjSFYwTFhCc1lXTmxhRzlzWkdWeUlIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVJQ0E2TFcxdmVpMXdiR0ZqWldodmJHUmxjaUI3WEhKY2JpQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQjlYSEpjYmlBZ09qb3RiVzk2TFhCc1lXTmxhRzlzWkdWeUlIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVJQ0E2TFcxekxXbHVjSFYwTFhCc1lXTmxhRzlzWkdWeUlIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlHSjBibDlpYjNKa1pYSW9KR0p2Y21SbGNsOWpiMnh2Y2pvZ0pHRmpZMlZ1ZEY5amIyeHZjaWtnZTF4eVhHNGdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEhKY2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2diR2x1WldGeUxXZHlZV1JwWlc1MEtIUnZJSEpwWjJoMExDQWtZbTl5WkdWeVgyTnZiRzl5SURFd01DVXNJQ1JpYjNKa1pYSmZZMjlzYjNJZ01UQXdKU2tzWEhKY2JpQWdiR2x1WldGeUxXZHlZV1JwWlc1MEtIUnZJR0p2ZEhSdmJTd2dKR0p2Y21SbGNsOWpiMnh2Y2lBeE1EQWxMQ0FrWW05eVpHVnlYMk52Ykc5eUlERXdNQ1VwTEZ4eVhHNGdJR3hwYm1WaGNpMW5jbUZrYVdWdWRDaDBieUJ5YVdkb2RDd2dKR0p2Y21SbGNsOWpiMnh2Y2lBeE1EQWxMQ0FrWW05eVpHVnlYMk52Ykc5eUlERXdNQ1VwTEZ4eVhHNGdJR3hwYm1WaGNpMW5jbUZrYVdWdWRDaDBieUJpYjNSMGIyMHNJQ1JpYjNKa1pYSmZZMjlzYjNJZ01UQXdKU3dnSkdKdmNtUmxjbDlqYjJ4dmNpQXhNREFsS1R0Y2NseHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJREV3TUNVZ01uQjRMRnh5WEc0Z0lESndlQ0F4TURBbExGeHlYRzRnSURFd01DVWdNbkI0TEZ4eVhHNGdJREp3ZUNBeE1EQWxPMXh5WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJREFnTUN4Y2NseHVJQ0F4TURBbElEQXNYSEpjYmlBZ01UQXdKU0F4TURBbExGeHlYRzRnSURBZ01UQXdKVHRjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUcxbFpHbGhMWGg0YkNCN1hISmNiaUFnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFME1EQndlQ2tnZTF4eVhHNGdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnYldWa2FXRXRlR3dnZTF4eVhHNGdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUF4TWpBd2NIZ3BJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1UUcxcGVHbHVJRzFsWkdsaExXeG5JSHRjY2x4dUlDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dPVGt5Y0hncElIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlHMWxaR2xoTFcxa0lIdGNjbHh1SUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ056WTRjSGdwSUh0Y2NseHVJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUcxbFpHbGhMWE50SUh0Y2NseHVJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTlRjMmNIZ3BJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlNKZGZRPT0gKi8iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUnViaWtcIjtcbiAgc3JjOiBsb2NhbChcIlJ1YmlrLUxpZ2h0XCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQud29mZikgZm9ybWF0KFwid29mZlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLUxpZ2h0LndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLUxpZ2h0LnR0ZikgZm9ybWF0KFwidHRmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQuZW90KSBmb3JtYXQoXCJlb3RcIik7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSdWJpa1wiO1xuICBzcmM6IGxvY2FsKFwiUnViaWstTWVkaXVtXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLndvZmYpIGZvcm1hdChcIndvZmZcIiksIHVybCguLi9mb250cy9SdWJpay1NZWRpdW0ud29mZjIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLnR0ZikgZm9ybWF0KFwidHRmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLmVvdCkgZm9ybWF0KFwiZW90XCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUnViaWtcIjtcbiAgc3JjOiBsb2NhbChcIlJ1YmlrLUxpZ2h0XCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQud29mZikgZm9ybWF0KFwid29mZlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLUxpZ2h0LndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKC4uL2ZvbnRzL1J1YmlrLUxpZ2h0LnR0ZikgZm9ybWF0KFwidHRmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTGlnaHQuZW90KSBmb3JtYXQoXCJlb3RcIik7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSdWJpa1wiO1xuICBzcmM6IGxvY2FsKFwiUnViaWstTWVkaXVtXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLndvZmYpIGZvcm1hdChcIndvZmZcIiksIHVybCguLi9mb250cy9SdWJpay1NZWRpdW0ud29mZjIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLnR0ZikgZm9ybWF0KFwidHRmXCIpLCB1cmwoLi4vZm9udHMvUnViaWstTWVkaXVtLmVvdCkgZm9ybWF0KFwiZW90XCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IFJ1YmlrLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxOXB4O1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgbWFyZ2luOiAwO1xufVxuXG51bCwgbGkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmxpIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuXG5wIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzZDRUVDNztcbn1cblxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiBub25lO1xufVxuXG5pbnB1dCxcbnNlbGVjdCxcbmJ1dHRvbiB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbmJ1dHRvbiwgaW5wdXRbdHlwZT1idXR0b25dIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1yaWdodDogdmFyKC0tYnMtZ3V0dGVyLXgsIDE1cHgpO1xuICBwYWRkaW5nLWxlZnQ6IHZhcigtLWJzLWd1dHRlci14LCAxNXB4KTtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDU0MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA3MjBweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogOTYwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMTQwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMzIwcHg7XG4gIH1cbn1cblxuLm1ha2Utcm93LCAuZm9vdGVyLCAudGVhbSwgLnByaWNpbmcsIC5jbGllbnRzLCAucHJvbW8sIC5oZWFkZXIge1xuICAtLWJzLWd1dHRlci14OiAzMHB4O1xuICAtLWJzLWd1dHRlci15OiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi10b3A6IGNhbGMoLTEgKiB2YXIoLS1icy1ndXR0ZXIteSkpO1xuICBtYXJnaW4tcmlnaHQ6IGNhbGMoLTAuNSAqIHZhcigtLWJzLWd1dHRlci14KSk7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKC0wLjUgKiB2YXIoLS1icy1ndXR0ZXIteCkpO1xuICAtLWJzLWd1dHRlci15OiAxcmVtO1xufVxuLm1ha2Utcm93ID4gKiwgLmZvb3RlciA+ICosIC50ZWFtID4gKiwgLnByaWNpbmcgPiAqLCAuY2xpZW50cyA+ICosIC5wcm9tbyA+ICosIC5oZWFkZXIgPiAqIHtcbiAgZmxleC1zaHJpbms6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctcmlnaHQ6IGNhbGModmFyKC0tYnMtZ3V0dGVyLXgpICogMC41KTtcbiAgcGFkZGluZy1sZWZ0OiBjYWxjKHZhcigtLWJzLWd1dHRlci14KSAqIDAuNSk7XG4gIG1hcmdpbi10b3A6IHZhcigtLWJzLWd1dHRlci15KTtcbn1cblxuLmJsb2NrIHtcbiAgcGFkZGluZzogMjBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkO1xuICBib3JkZXI6IDFweCBzb2xpZCAjYWFhO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZWFkZXIge1xuICBtaW4taGVpZ2h0OiA5MHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMzBweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyX19sb2dvIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMjUlO1xuICB9XG4gIC5oZWFkZXJfX25hdiB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDc1JTtcbiAgfVxufVxuXG4ucHJvbW8ge1xuICBtaW4taGVpZ2h0OiA0NjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTEwcHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnByb21vX19pdGVtIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5cbi5jbGllbnRzIHtcbiAgbWluLWhlaWdodDogODBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTcwcHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmNsaWVudHNfX2l0ZW0ge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuY2xpZW50c19faXRlbSB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5jbGllbnRzX19pdGVtIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMTYuNjY2NjY2NjclO1xuICB9XG59XG5cbi5wcmljaW5nIHtcbiAgbWluLWhlaWdodDogNDgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIzNXB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wcmljaW5nX19pdGVtIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMzMuMzMzMzMzMzMlO1xuICB9XG59XG5cbi50ZWFtIHtcbiAgbWluLWhlaWdodDogMzYwcHg7XG4gIG1hcmdpbi1ib3R0b206IDE4MHB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50ZWFtX19pdGVtIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLnRlYW1fX2l0ZW0ge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiAyNSU7XG4gIH1cbn1cblxuLmZvb3RlciB7XG4gIG1pbi1oZWlnaHQ6IDM4MHB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXJfX3NvY2lhbCB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5mb290ZXJfX3NvY2lhbCB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMzJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5mb290ZXJfX2NvbnRhY3Qge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuZm9vdGVyX19jb250YWN0IHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogMjUlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZvb3Rlcl9fZm9ybSB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuZm9vdGVyX19mb3JtIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogNDEuNjY2NjY2NjclO1xuICB9XG59XG5cbi5zbGljay1zbGlkZXIge1xuICBtaW4td2lkdGg6IDA7XG59XG5cbi5zbGljay1saXN0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnNsaWNrLXRyYWNrIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnMtbWFpbiB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5zLW1haW46OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18xLnN2Z1wiKSA5MCUgLTEwJSBuby1yZXBlYXQsIHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18yLnN2Z1wiKSAtNSUgNDAlIG5vLXJlcGVhdCwgdXJsKFwiLi4vaW1nL3NlY3Rpb24tbWFpbi9zZWN0aW9uXzEtc3ZnXzMuc3ZnXCIpIDEwNSUgOTAlIG5vLXJlcGVhdCwgcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHggNDBweCwgMjAlLCAzMCU7XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbi5zLW1haW46OmFmdGVye2JhY2tncm91bmQ6dXJsKFwiLi4vaW1nL3NlY3Rpb24tbWFpbi9zZWN0aW9uXzEtc3ZnXzEuc3ZnXCIpIDkwJSAtMTAlIG5vLXJlcGVhdCwgdXJsKFwiLi4vaW1nL3NlY3Rpb24tbWFpbi9zZWN0aW9uXzEtc3ZnXzIuc3ZnXCIpIC01JSA0MCUgbm8tcmVwZWF0LCB1cmwoXCIuLi9pbWcvc2VjdGlvbi1tYWluL3NlY3Rpb25fMS1zdmdfMy5zdmdcIikgMTA1JSA5MCUgbm8tcmVwZWF0LCByZ2JhKDAsIDAsIDAsIDAuMyl9XG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cbiIsIkBpbXBvcnQgXCJmb250c1wiO1xyXG5AaW1wb3J0IFwiZ3JpZFwiO1xyXG5cclxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LWZhbWlseTogJGJhc2VfZm9udF9mYW1pbHk7XHJcbiAgZm9udC1zaXplOiAxOXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbn1cclxuXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxudWwsIGxpIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxubGkge1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG5cclxucCB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6ICRhY2NlbnRfY29sb3I7XHJcbn1cclxuXHJcbmF1ZGlvLFxyXG5jYW52YXMsXHJcbmlmcmFtZSxcclxuaW1nLFxyXG5zdmcsXHJcbnZpZGVvIHtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgcmVzaXplOiBub25lO1xyXG59XHJcblxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG5idXR0b24ge1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbmJ1dHRvbiwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgQGluY2x1ZGUgbWFrZS1jb250YWluZXIoKTtcclxuICBAaW5jbHVkZSBtYWtlLW1heC13aWR0aC1jb250YWluZXIoKTtcclxufVxyXG5cclxuLy8uY29sIHtcclxuLy8gIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XHJcbi8vICBib3JkZXI6IDFweCBzb2xpZCAjYWFhO1xyXG4vL31cclxuXHJcbi5tYWtlLXJvdyB7XHJcbiAgQGluY2x1ZGUgbWFrZS1yb3coKTtcclxuICAtLWJzLWd1dHRlci15OiAxcmVtO1xyXG4gICYgPiAqICB7XHJcbiAgICBAaW5jbHVkZSBtYWtlLWNvbC1yZWFkeSgpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgpIC0gbW9iaWxlIGZpcnN0XHJcbi8vIG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigpIC0gZGVza3RvcCBmaXJzdFxyXG5cclxuLmJsb2NrIHtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNhYWE7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICBAZXh0ZW5kIC5tYWtlLXJvdztcclxuICBtaW4taGVpZ2h0OiA5MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEzMHB4O1xyXG5cclxuICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgQGluY2x1ZGUgbWFrZS1jb2woMyk7XHJcbiAgICB9XHJcbiAgICAmX19uYXYge1xyXG4gICAgICBAaW5jbHVkZSBtYWtlLWNvbCg5KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5wcm9tbyB7XHJcbiAgQGV4dGVuZCAubWFrZS1yb3c7XHJcbiAgbWluLWhlaWdodDogNDYwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTEwcHg7XHJcbiAgJl9faXRlbSB7XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1ha2UtY29sKDYpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmNsaWVudHMge1xyXG4gIEBleHRlbmQgLm1ha2Utcm93O1xyXG4gIG1pbi1oZWlnaHQ6IDgwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTcwcHg7XHJcbiAgJl9faXRlbSB7XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1ha2UtY29sKDYpO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xyXG4gICAgICBAaW5jbHVkZSBtYWtlLWNvbCg0KTtcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHtcclxuICAgICAgQGluY2x1ZGUgbWFrZS1jb2woMik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ucHJpY2luZyB7XHJcbiAgQGV4dGVuZCAubWFrZS1yb3c7XHJcbiAgbWluLWhlaWdodDogNDgwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjM1cHg7XHJcbiAgJl9faXRlbSB7XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1ha2UtY29sKDQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4udGVhbSB7XHJcbiAgQGV4dGVuZCAubWFrZS1yb3c7XHJcbiAgbWluLWhlaWdodDogMzYwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTgwcHg7XHJcbiAgJl9faXRlbSB7XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1ha2UtY29sKDYpO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xyXG4gICAgICBAaW5jbHVkZSBtYWtlLWNvbCgzKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLmZvb3RlciB7XHJcbiAgQGV4dGVuZCAubWFrZS1yb3c7XHJcbiAgbWluLWhlaWdodDogMzgwcHg7XHJcbiAgJl9fc29jaWFsIHtcclxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcclxuICAgICAgQGluY2x1ZGUgbWFrZS1jb2woNik7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1ha2UtY29sKDQpO1xyXG4gICAgfVxyXG4gIH1cclxuICAmX19jb250YWN0IHtcclxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcclxuICAgICAgQGluY2x1ZGUgbWFrZS1jb2woNik7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1ha2UtY29sKDMpO1xyXG4gICAgfVxyXG4gIH1cclxuICAmX19mb3JtIHtcclxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcclxuICAgICAgQGluY2x1ZGUgbWFrZS1jb2woMTIpO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xyXG4gICAgICBAaW5jbHVkZSBtYWtlLWNvbCg1KTtcclxuICAgIH1cclxuICB9XHJcbn0iLCIvLyBDb250YWluZXIgbWl4aW5zXG5cbkBtaXhpbiBtYWtlLWNvbnRhaW5lcigkZ3V0dGVyOiAkY29udGFpbmVyLXBhZGRpbmcteCkge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1yaWdodDogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWd1dHRlci14LCAjeyRndXR0ZXJ9KTtcbiAgcGFkZGluZy1sZWZ0OiB2YXIoLS0jeyR2YXJpYWJsZS1wcmVmaXh9Z3V0dGVyLXgsICN7JGd1dHRlcn0pO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xufVxuIiwiLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vL1xuLy8gICAgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KVxuLy9cbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGUgaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQGlmIG5vdCAkbiB7XG4gICAgQGVycm9yIFwiYnJlYWtwb2ludCBgI3skbmFtZX1gIG5vdCBmb3VuZCBpbiBgI3skYnJlYWtwb2ludHN9YFwiO1xuICB9XG4gIEByZXR1cm4gaWYoJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1taW4oc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICA1NzZweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG1pbiAhPSAwLCAkbWluLCBudWxsKTtcbn1cblxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgcmVkdWNlZCBieSAwLjAycHggdG8gd29yayBhcm91bmQgdGhlIGxpbWl0YXRpb25zIG9mXG4vLyBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KG1kLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtYXggYW5kICRtYXggPiAwLCAkbWF4IC0gLjAyLCBudWxsKTtcbn1cblxuLy8gUmV0dXJucyBhIGJsYW5rIHN0cmluZyBpZiBzbWFsbGVzdCBicmVha3BvaW50LCBvdGhlcndpc2UgcmV0dXJucyB0aGUgbmFtZSB3aXRoIGEgZGFzaCBpbiBmcm9udC5cbi8vIFVzZWZ1bCBmb3IgbWFraW5nIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtaW5maXgoeHMsICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBcIlwiICAoUmV0dXJucyBhIGJsYW5rIHN0cmluZylcbi8vICAgID4+IGJyZWFrcG9pbnQtaW5maXgoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBcIi1zbVwiXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1pbmZpeCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICBAcmV0dXJuIGlmKGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpID09IG51bGwsIFwiXCIsIFwiLSN7JG5hbWV9XCIpO1xufVxuXG4vLyBNZWRpYSBvZiBhdCBsZWFzdCB0aGUgbWluaW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIHdpZGVyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWluIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSBvZiBhdCBtb3N0IHRoZSBtYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgbGFyZ2VzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWF4IHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSB0aGF0IHNwYW5zIG11bHRpcGxlIGJyZWFrcG9pbnQgd2lkdGhzLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IGJldHdlZW4gdGhlIG1pbiBhbmQgbWF4IGJyZWFrcG9pbnRzXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1iZXR3ZWVuKCRsb3dlciwgJHVwcGVyLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRsb3dlciwgJGJyZWFrcG9pbnRzKTtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJHVwcGVyLCAkYnJlYWtwb2ludHMpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRsb3dlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJHVwcGVyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLyBNZWRpYSBiZXR3ZWVuIHRoZSBicmVha3BvaW50J3MgbWluaW11bSBhbmQgbWF4aW11bSB3aWR0aHMuXG4vLyBObyBtaW5pbXVtIGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludCwgYW5kIG5vIG1heGltdW0gZm9yIHRoZSBsYXJnZXN0IG9uZS5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBvbmx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50LCBub3Qgdmlld3BvcnRzIGFueSB3aWRlciBvciBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LW9ubHkoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiAgYnJlYWtwb2ludC1tYXgoJG5leHQpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmV4dCwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiIsIi8vIEdyaWQgc3lzdGVtXG4vL1xuLy8gR2VuZXJhdGUgc2VtYW50aWMgZ3JpZCBjb2x1bW5zIHdpdGggdGhlc2UgbWl4aW5zLlxuXG5AbWl4aW4gbWFrZS1yb3coJGd1dHRlcjogJGdyaWQtZ3V0dGVyLXdpZHRoKSB7XG4gIC0tI3skdmFyaWFibGUtcHJlZml4fWd1dHRlci14OiAjeyRndXR0ZXJ9O1xuICAtLSN7JHZhcmlhYmxlLXByZWZpeH1ndXR0ZXIteTogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICAvLyBUT0RPOiBSZXZpc2l0IGNhbGMgb3JkZXIgYWZ0ZXIgaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0LWJvb3RzdHJhcC9yZWFjdC1ib290c3RyYXAvaXNzdWVzLzYwMzkgaXMgZml4ZWRcbiAgbWFyZ2luLXRvcDogY2FsYygtMSAqIHZhcigtLSN7JHZhcmlhYmxlLXByZWZpeH1ndXR0ZXIteSkpOyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIGZ1bmN0aW9uLWRpc2FsbG93ZWQtbGlzdFxuICBtYXJnaW4tcmlnaHQ6IGNhbGMoLS41ICogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWd1dHRlci14KSk7IC8vIHN0eWxlbGludC1kaXNhYmxlLWxpbmUgZnVuY3Rpb24tZGlzYWxsb3dlZC1saXN0XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKC0uNSAqIHZhcigtLSN7JHZhcmlhYmxlLXByZWZpeH1ndXR0ZXIteCkpOyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIGZ1bmN0aW9uLWRpc2FsbG93ZWQtbGlzdFxufVxuXG5AbWl4aW4gbWFrZS1jb2wtcmVhZHkoJGd1dHRlcjogJGdyaWQtZ3V0dGVyLXdpZHRoKSB7XG4gIC8vIEFkZCBib3ggc2l6aW5nIGlmIG9ubHkgdGhlIGdyaWQgaXMgbG9hZGVkXG4gIGJveC1zaXppbmc6IGlmKHZhcmlhYmxlLWV4aXN0cyhpbmNsdWRlLWNvbHVtbi1ib3gtc2l6aW5nKSBhbmQgJGluY2x1ZGUtY29sdW1uLWJveC1zaXppbmcsIGJvcmRlci1ib3gsIG51bGwpO1xuICAvLyBQcmV2ZW50IGNvbHVtbnMgZnJvbSBiZWNvbWluZyB0b28gbmFycm93IHdoZW4gYXQgc21hbGxlciBncmlkIHRpZXJzIGJ5XG4gIC8vIGFsd2F5cyBzZXR0aW5nIGB3aWR0aDogMTAwJTtgLiBUaGlzIHdvcmtzIGJlY2F1c2Ugd2Ugc2V0IHRoZSB3aWR0aFxuICAvLyBsYXRlciBvbiB0byBvdmVycmlkZSB0aGlzIGluaXRpYWwgd2lkdGguXG4gIGZsZXgtc2hyaW5rOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlOyAvLyBQcmV2ZW50IGAuY29sLWF1dG9gLCBgLmNvbGAgKCYgcmVzcG9uc2l2ZSB2YXJpYW50cykgZnJvbSBicmVha2luZyBvdXQgdGhlIGdyaWRcbiAgcGFkZGluZy1yaWdodDogY2FsYyh2YXIoLS0jeyR2YXJpYWJsZS1wcmVmaXh9Z3V0dGVyLXgpICogLjUpOyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIGZ1bmN0aW9uLWRpc2FsbG93ZWQtbGlzdFxuICBwYWRkaW5nLWxlZnQ6IGNhbGModmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWd1dHRlci14KSAqIC41KTsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZSBmdW5jdGlvbi1kaXNhbGxvd2VkLWxpc3RcbiAgbWFyZ2luLXRvcDogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWd1dHRlci15KTtcbn1cblxuQG1peGluIG1ha2UtY29sKCRzaXplOiBmYWxzZSwgJGNvbHVtbnM6ICRncmlkLWNvbHVtbnMpIHtcbiAgQGlmICRzaXplIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogcGVyY2VudGFnZShkaXZpZGUoJHNpemUsICRjb2x1bW5zKSk7XG5cbiAgfSBAZWxzZSB7XG4gICAgZmxleDogMSAxIDA7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbkBtaXhpbiBtYWtlLWNvbC1hdXRvKCkge1xuICBmbGV4OiAwIDAgYXV0bztcbiAgd2lkdGg6IGF1dG87XG59XG5cbkBtaXhpbiBtYWtlLWNvbC1vZmZzZXQoJHNpemUsICRjb2x1bW5zOiAkZ3JpZC1jb2x1bW5zKSB7XG4gICRudW06IGRpdmlkZSgkc2l6ZSwgJGNvbHVtbnMpO1xuICBtYXJnaW4tbGVmdDogaWYoJG51bSA9PSAwLCAwLCBwZXJjZW50YWdlKCRudW0pKTtcbn1cblxuLy8gUm93IGNvbHVtbnNcbi8vXG4vLyBTcGVjaWZ5IG9uIGEgcGFyZW50IGVsZW1lbnQoZS5nLiwgLnJvdykgdG8gZm9yY2UgaW1tZWRpYXRlIGNoaWxkcmVuIGludG8gTk5cbi8vIG51bWJlcm9mIGNvbHVtbnMuIFN1cHBvcnRzIHdyYXBwaW5nIHRvIG5ldyBsaW5lcywgYnV0IGRvZXMgbm90IGRvIGEgTWFzb25yeVxuLy8gc3R5bGUgZ3JpZC5cbkBtaXhpbiByb3ctY29scygkY291bnQpIHtcbiAgPiAqIHtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB3aWR0aDogZGl2aWRlKDEwMCUsICRjb3VudCk7XG4gIH1cbn1cblxuLy8gRnJhbWV3b3JrIGdyaWQgZ2VuZXJhdGlvblxuLy9cbi8vIFVzZWQgb25seSBieSBCb290c3RyYXAgdG8gZ2VuZXJhdGUgdGhlIGNvcnJlY3QgbnVtYmVyIG9mIGdyaWQgY2xhc3NlcyBnaXZlblxuLy8gYW55IHZhbHVlIG9mIGAkZ3JpZC1jb2x1bW5zYC5cblxuQG1peGluIG1ha2UtZ3JpZC1jb2x1bW5zKCRjb2x1bW5zOiAkZ3JpZC1jb2x1bW5zLCAkZ3V0dGVyOiAkZ3JpZC1ndXR0ZXItd2lkdGgsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJGJyZWFrcG9pbnRzKSB7XG4gICAgJGluZml4OiBicmVha3BvaW50LWluZml4KCRicmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICAvLyBQcm92aWRlIGJhc2ljIGAuY29sLXticH1gIGNsYXNzZXMgZm9yIGVxdWFsLXdpZHRoIGZsZXhib3ggY29sdW1uc1xuICAgICAgLmNvbCN7JGluZml4fSB7XG4gICAgICAgIGZsZXg6IDEgMCAwJTsgLy8gRmxleGJ1Z3MgIzQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9waGlsaXB3YWx0b24vZmxleGJ1Z3MjZmxleGJ1Zy00XG4gICAgICB9XG5cbiAgICAgIC5yb3ctY29scyN7JGluZml4fS1hdXRvID4gKiB7XG4gICAgICAgIEBpbmNsdWRlIG1ha2UtY29sLWF1dG8oKTtcbiAgICAgIH1cblxuICAgICAgQGlmICRncmlkLXJvdy1jb2x1bW5zID4gMCB7XG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGdyaWQtcm93LWNvbHVtbnMge1xuICAgICAgICAgIC5yb3ctY29scyN7JGluZml4fS0jeyRpfSB7XG4gICAgICAgICAgICBAaW5jbHVkZSByb3ctY29scygkaSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5jb2wjeyRpbmZpeH0tYXV0byB7XG4gICAgICAgIEBpbmNsdWRlIG1ha2UtY29sLWF1dG8oKTtcbiAgICAgIH1cblxuICAgICAgQGlmICRjb2x1bW5zID4gMCB7XG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnMge1xuICAgICAgICAgIC5jb2wjeyRpbmZpeH0tI3skaX0ge1xuICAgICAgICAgICAgQGluY2x1ZGUgbWFrZS1jb2woJGksICRjb2x1bW5zKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBgJGNvbHVtbnMgLSAxYCBiZWNhdXNlIG9mZnNldHRpbmcgYnkgdGhlIHdpZHRoIG9mIGFuIGVudGlyZSByb3cgaXNuJ3QgcG9zc2libGVcbiAgICAgICAgQGZvciAkaSBmcm9tIDAgdGhyb3VnaCAoJGNvbHVtbnMgLSAxKSB7XG4gICAgICAgICAgQGlmIG5vdCAoJGluZml4ID09IFwiXCIgYW5kICRpID09IDApIHsgLy8gQXZvaWQgZW1pdHRpbmcgdXNlbGVzcyAub2Zmc2V0LTBcbiAgICAgICAgICAgIC5vZmZzZXQjeyRpbmZpeH0tI3skaX0ge1xuICAgICAgICAgICAgICBAaW5jbHVkZSBtYWtlLWNvbC1vZmZzZXQoJGksICRjb2x1bW5zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gR3V0dGVyc1xuICAgICAgLy9cbiAgICAgIC8vIE1ha2UgdXNlIG9mIGAuZy0qYCwgYC5neC0qYCBvciBgLmd5LSpgIHV0aWxpdGllcyB0byBjaGFuZ2Ugc3BhY2luZyBiZXR3ZWVuIHRoZSBjb2x1bW5zLlxuICAgICAgQGVhY2ggJGtleSwgJHZhbHVlIGluICRndXR0ZXJzIHtcbiAgICAgICAgLmcjeyRpbmZpeH0tI3ska2V5fSxcbiAgICAgICAgLmd4I3skaW5maXh9LSN7JGtleX0ge1xuICAgICAgICAgIC0tI3skdmFyaWFibGUtcHJlZml4fWd1dHRlci14OiAjeyR2YWx1ZX07XG4gICAgICAgIH1cblxuICAgICAgICAuZyN7JGluZml4fS0jeyRrZXl9LFxuICAgICAgICAuZ3kjeyRpbmZpeH0tI3ska2V5fSB7XG4gICAgICAgICAgLS0jeyR2YXJpYWJsZS1wcmVmaXh9Z3V0dGVyLXk6ICN7JHZhbHVlfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWFrZS1jc3NncmlkKCRjb2x1bW5zOiAkZ3JpZC1jb2x1bW5zLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRicmVha3BvaW50cykge1xuICAgICRpbmZpeDogYnJlYWtwb2ludC1pbmZpeCgkYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzKTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGJyZWFrcG9pbnQsICRicmVha3BvaW50cykge1xuICAgICAgQGlmICRjb2x1bW5zID4gMCB7XG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJGNvbHVtbnMge1xuICAgICAgICAgIC5nLWNvbCN7JGluZml4fS0jeyRpfSB7XG4gICAgICAgICAgICBncmlkLWNvbHVtbjogYXV0byAvIHNwYW4gJGk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gU3RhcnQgd2l0aCBgMWAgYmVjYXVzZSBgMGAgaXMgYW5kIGludmFsaWQgdmFsdWUuXG4gICAgICAgIC8vIEVuZHMgd2l0aCBgJGNvbHVtbnMgLSAxYCBiZWNhdXNlIG9mZnNldHRpbmcgYnkgdGhlIHdpZHRoIG9mIGFuIGVudGlyZSByb3cgaXNuJ3QgcG9zc2libGUuXG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggKCRjb2x1bW5zIC0gMSkge1xuICAgICAgICAgIC5nLXN0YXJ0I3skaW5maXh9LSN7JGl9IHtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAkaTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5zbGljay1zbGlkZXIge1xyXG4gIG1pbi13aWR0aDogMDtcclxufVxyXG4uc2xpY2stbGlzdCB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLy8g0JTQu9GPINCy0LXRgNGC0LjQutCw0LvRjNC90L7Qs9C+INGB0LvQsNC50LTQtdGA0LAg0L3QsNC00L4gZGlzcGxheTogYmxvY2tcclxuLnNsaWNrLXRyYWNrIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59IiwiLnMtbWFpbiB7XHJcbiAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgJjo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgJHRvcDogMCwgJHJpZ2h0OiAwLCAkYm90dG9tOiAwLCAkbGVmdDogMCk7XHJcbiAgICBiYWNrZ3JvdW5kOlxyXG4gICAgICAgICAgICB1cmwoXCIuLi9pbWcvc2VjdGlvbi1tYWluL3NlY3Rpb25fMS1zdmdfMS5zdmdcIikgOTAlIC0xMCUgbm8tcmVwZWF0LFxyXG4gICAgICAgICAgICB1cmwoXCIuLi9pbWcvc2VjdGlvbi1tYWluL3NlY3Rpb25fMS1zdmdfMi5zdmdcIikgLTUlIDQwJSBuby1yZXBlYXQsXHJcbiAgICAgICAgICAgIHVybChcIi4uL2ltZy9zZWN0aW9uLW1haW4vc2VjdGlvbl8xLXN2Z18zLnN2Z1wiKSAxMDUlIDkwJSBuby1yZXBlYXQsXHJcbiAgICAgICAgICAgIHJnYmEoIzAwMCwgMC4zKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogMzBweCA0MHB4LCAyMCUsIDMwJTtcclxuICB9XHJcbn0iLCJAbWl4aW4gc2l6ZSgkYSwgJGI6IGZhbHNlKSB7XHJcbiAgd2lkdGg6ICRhO1xyXG4gIEBpZiAkYiB7XHJcbiAgICBoZWlnaHQ6ICRiO1xyXG4gIH0gQGVsc2Uge1xyXG4gICAgaGVpZ2h0OiAkYTtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiByZW0oJHNpemUpIHtcclxuICBmb250LXNpemU6ICN7JHNpemUvMTZ9cmVtO1xyXG59XHJcblxyXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyKCkge1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRlLXgoKSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS15KCkge1xyXG4gIHRvcDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRlLWFsbCgkbnVtOiAwKSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogJG51bTtcclxuICBib3R0b206ICRudW07XHJcbiAgbGVmdDogJG51bTtcclxuICByaWdodDogJG51bTtcclxufVxyXG5cclxuQG1peGluIHBvc2l0aW9uKCRwb3NpdGlvbiwgJHRvcDogbnVsbCwgJGJvdHRvbTogbnVsbCwgJGxlZnQ6IG51bGwsICRyaWdodDogbnVsbCkge1xyXG4gIHBvc2l0aW9uOiAkcG9zaXRpb247XHJcbiAgdG9wOiAkdG9wO1xyXG4gIHJpZ2h0OiAkcmlnaHQ7XHJcbiAgYm90dG9tOiAkYm90dG9tO1xyXG4gIGxlZnQ6ICRsZWZ0O1xyXG59XHJcblxyXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xyXG4gIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbiAgOi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG4gIDo6LW1vei1wbGFjZWhvbGRlciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbiAgOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBidG5fYm9yZGVyKCRib3JkZXJfY29sb3I6ICRhY2NlbnRfY29sb3IpIHtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJGJvcmRlcl9jb2xvciAxMDAlLCAkYm9yZGVyX2NvbG9yIDEwMCUpLFxyXG4gIGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRib3JkZXJfY29sb3IgMTAwJSwgJGJvcmRlcl9jb2xvciAxMDAlKSxcclxuICBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRib3JkZXJfY29sb3IgMTAwJSwgJGJvcmRlcl9jb2xvciAxMDAlKSxcclxuICBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAkYm9yZGVyX2NvbG9yIDEwMCUsICRib3JkZXJfY29sb3IgMTAwJSk7XHJcbiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDJweCxcclxuICAycHggMTAwJSxcclxuICAxMDAlIDJweCxcclxuICAycHggMTAwJTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDAsXHJcbiAgMTAwJSAwLFxyXG4gIDEwMCUgMTAwJSxcclxuICAwIDEwMCU7XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS14eGwge1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxNDAwcHgpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1lZGlhLXhsIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS1sZyB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS1tZCB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS1zbSB7XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn0iXX0= */